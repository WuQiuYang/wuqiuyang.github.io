"use strict";(self.webpackChunk_ohkit_site=self.webpackChunk_ohkit_site||[]).push([[16],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{R:()=>useMDXComponents,x:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}},[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./src/utils/packages/async/Doc.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/next/dist/compiled/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),md_playground=__webpack_require__("./src/components/md-playground/index.tsx");const README_namespaceObject="# `@ohkit/async`\n\n> Promise串行管道工具，用于管理异步任务的顺序执行\n\n## 安装\n```bash\nnpm install @ohkit/async\n```\n\n## 功能特性\n- 管理Promise任务的串行执行\n- 支持任务队列\n- 提供任务执行状态回调\n- 灵活的任务触发控制\n\n## 基本用法\n\n```ts\nimport { PromisePipe } from '@ohkit/async';\n\nconst pipe = new PromisePipe();\n\n// 添加并立即执行任务\npipe.add(async () => {\n  await fetch('/api/data1');\n});\n\n// 添加延迟执行任务\npipe.add(async () => {\n  await fetch('/api/data2');\n}, { fireImmediately: false });\n\n// 手动启动执行\npipe.start();\n```\n\n## API 说明\n\n### PromisePipe 类\n\n#### 方法\n\n| 方法 | 说明 | 参数 | 返回值 |\n|------|------|------|--------|\n| add | 添加异步任务 | `fun: PromiseTask`, `opt?: { returnWaitAll?: boolean, fireImmediately?: boolean }` | `Promise<T>` |\n| start | 开始执行队列中的任务 | - | - |\n\n#### 参数说明\n\n- `PromiseTask`: `() => Promise<T> | void` 异步任务函数\n- `returnWaitAll`: 是否等待所有任务完成\n- `fireImmediately`: 是否立即执行任务\n\n## 高级用法\n\n### 获取任务执行结果\n\n```ts\nconst result = await pipe.add(async () => {\n  return await fetch('/api/data');\n}, { returnWaitAll: true });\n```\n\n### 任务状态回调\n\n```ts\npipe.add(async () => {\n  // 任务逻辑\n}, {\n  fireImmediately: false,\n  returnWaitAll: true\n}).then(res => {\n  console.log('任务完成:', res);\n});\n```\n\n## 注意事项\n1. 任务函数需要返回Promise才能保证串行执行\n2. 默认情况下任务会立即执行\n3. 使用returnWaitAll表示需要等待pipe中所有任务完成后才resolve";function _createMdxContent(props){return(0,jsx_runtime.jsx)(md_playground.f,{children:README_namespaceObject})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent()}},"./src/components/md-playground/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{f:()=>MDPlayground});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react_markdown__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-markdown/lib/index.js"),remark_gfm__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/remark-gfm/lib/index.js"),react_syntax_highlighter__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react-syntax-highlighter/dist/esm/prism.js");const MDPlayground=props=>{const{children,theme="vscDarkPlus"}=props;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_markdown__WEBPACK_IMPORTED_MODULE_1__.oz,{children,remarkPlugins:[remark_gfm__WEBPACK_IMPORTED_MODULE_2__.A],components:{code({node,inline,className,children,key,ref,...props}){const match=/language-(\w+)/.exec(className||"");return!inline&&match?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{ref:r=>{"function"==typeof ref&&ref(r)},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_syntax_highlighter__WEBPACK_IMPORTED_MODULE_3__.A,{children:String(children).replace(/\n$/,""),style:__webpack_require__("./node_modules/react-syntax-highlighter/dist/esm/styles/prism/index.js")[theme],language:match[1],PreTag:"div",...props})},key):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("code",{className,...props,children})}}})};try{MDPlayground.displayName="MDPlayground",MDPlayground.__docgenInfo={description:"",displayName:"MDPlayground",props:{theme:{defaultValue:{value:"vscDarkPlus"},description:"主题",name:"theme",required:!1,type:{name:"CodeTheme"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/md-playground/index.tsx#MDPlayground"]={docgenInfo:MDPlayground.__docgenInfo,name:"MDPlayground",path:"src/components/md-playground/index.tsx#MDPlayground"})}catch(__react_docgen_typescript_loader_error){}}}]);