/*! For license information please see components-multi-tree-src-index-stories.e702655f.iframe.bundle.js.LICENSE.txt */
(self.webpackChunk_ohkit_site=self.webpackChunk_ohkit_site||[]).push([[638],{"./src/components/multi-tree/src/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomToolbar:()=>CustomToolbar,DarkMode:()=>DarkMode,Default:()=>Default,LazyLoading:()=>LazyLoading,RandomNodeHeight:()=>RandomNodeHeight,__namedExportsOrder:()=>__namedExportsOrder,default:()=>index_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),tooltip=__webpack_require__("./node_modules/antd/es/tooltip/index.js"),es_button=__webpack_require__("./node_modules/antd/es/button/index.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");const asn_ZoomOutOutlined={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M637 443H325c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h312c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8zm284 424L775 721c122.1-148.9 113.6-369.5-26-509-148-148.1-388.4-148.1-537 0-148.1 148.6-148.1 389 0 537 139.5 139.6 360.1 148.1 509 26l146 146c3.2 2.8 8.3 2.8 11 0l43-43c2.8-2.7 2.8-7.8 0-11zM696 696c-118.8 118.7-311.2 118.7-430 0-118.7-118.8-118.7-311.2 0-430 118.8-118.7 311.2-118.7 430 0 118.7 118.8 118.7 311.2 0 430z"}}]},name:"zoom-out",theme:"outlined"};var AntdIcon=__webpack_require__("./node_modules/@ant-design/icons/es/components/AntdIcon.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const ZoomOutOutlined_ZoomOutOutlined=(props,ref)=>react.createElement(AntdIcon.A,_extends({},props,{ref,icon:asn_ZoomOutOutlined}));const icons_ZoomOutOutlined=react.forwardRef(ZoomOutOutlined_ZoomOutOutlined);const asn_ZoomInOutlined={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M637 443H519V309c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v134H325c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h118v134c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V519h118c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8zm284 424L775 721c122.1-148.9 113.6-369.5-26-509-148-148.1-388.4-148.1-537 0-148.1 148.6-148.1 389 0 537 139.5 139.6 360.1 148.1 509 26l146 146c3.2 2.8 8.3 2.8 11 0l43-43c2.8-2.7 2.8-7.8 0-11zM696 696c-118.8 118.7-311.2 118.7-430 0-118.7-118.8-118.7-311.2 0-430 118.8-118.7 311.2-118.7 430 0 118.7 118.8 118.7 311.2 0 430z"}}]},name:"zoom-in",theme:"outlined"};function ZoomInOutlined_extends(){return ZoomInOutlined_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},ZoomInOutlined_extends.apply(this,arguments)}const ZoomInOutlined_ZoomInOutlined=(props,ref)=>react.createElement(AntdIcon.A,ZoomInOutlined_extends({},props,{ref,icon:asn_ZoomInOutlined}));const icons_ZoomInOutlined=react.forwardRef(ZoomInOutlined_ZoomInOutlined);const asn_AimOutlined={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"defs",attrs:{},children:[{tag:"style",attrs:{}}]},{tag:"path",attrs:{d:"M952 474H829.8C812.5 327.6 696.4 211.5 550 194.2V72c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v122.2C327.6 211.5 211.5 327.6 194.2 474H72c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h122.2C211.5 696.4 327.6 812.5 474 829.8V952c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V829.8C696.4 812.5 812.5 696.4 829.8 550H952c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8zM512 756c-134.8 0-244-109.2-244-244s109.2-244 244-244 244 109.2 244 244-109.2 244-244 244z"}},{tag:"path",attrs:{d:"M512 392c-32.1 0-62.1 12.4-84.8 35.2-22.7 22.7-35.2 52.7-35.2 84.8s12.5 62.1 35.2 84.8C449.9 619.4 480 632 512 632s62.1-12.5 84.8-35.2C619.4 574.1 632 544 632 512s-12.5-62.1-35.2-84.8A118.57 118.57 0 00512 392z"}}]},name:"aim",theme:"outlined"};function AimOutlined_extends(){return AimOutlined_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},AimOutlined_extends.apply(this,arguments)}const AimOutlined_AimOutlined=(props,ref)=>react.createElement(AntdIcon.A,AimOutlined_extends({},props,{ref,icon:asn_AimOutlined}));const icons_AimOutlined=react.forwardRef(AimOutlined_AimOutlined);var visit_tree=__webpack_require__("./src/components/multi-tree/node_modules/@moyuyc/visit-tree/index.js"),_baseGet=__webpack_require__("./node_modules/lodash-es/_baseGet.js");const lodash_es_get=function get(object,path,defaultValue){var result=null==object?void 0:(0,_baseGet.A)(object,path);return void 0===result?defaultValue:result};const lodash_es_isNil=function isNil(value){return null==value};var debounce=__webpack_require__("./node_modules/lodash-es/debounce.js"),throttle=__webpack_require__("./node_modules/lodash-es/throttle.js"),index_es=__webpack_require__("./src/utils/packages/prefix-classname/dist/index.es.js"),dist_index_es=__webpack_require__("./src/components/measure/dist/index.es.js"),react_helper_dist_index_es=__webpack_require__("./src/utils/packages/react-helper/dist/index.es.js"),dom_helper_dist_index_es=__webpack_require__("./src/utils/packages/dom-helper/dist/index.es.js"),isFunction=__webpack_require__("./node_modules/lodash-es/isFunction.js"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),style=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[14].use[1]!./node_modules/postcss-loader/dist/cjs.js!./node_modules/resolve-url-loader/index.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[14].use[4]!./src/components/multi-tree/src/toolbar/style.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(style.A,options);style.A&&style.A.locals&&style.A.locals;class MultiTreeToolbar extends react.Component{render(){const{renderToolbar,minZoom,maxZoom,zoomStep}=this.props;if((0,isFunction.A)(renderToolbar)){const{handleZoomIn,handleZoomOut,goBackCenter}=this;return renderToolbar({zoom:this.state.zoom,minZoom,maxZoom,zoomStep,zoomIn:handleZoomIn,zoomOut:handleZoomOut,goBackCenter})}const{className,onClick}=this.props,{zoom}=this.state;return(0,jsx_runtime.jsx)("div",{className:(0,index_es.x)(c("toolbar-container"),className),onClick,children:(0,jsx_runtime.jsxs)("div",{className:c("toolbar-control"),children:[(0,jsx_runtime.jsx)("button",{className:c("zoom-control"),onClick:this.handleZoomOut,children:"缩小"}),(0,jsx_runtime.jsxs)("div",{className:c("zoom-size"),children:[Math.round(100*zoom),"%"]}),(0,jsx_runtime.jsx)("button",{className:c("zoom-control"),onClick:this.handleZoomIn,children:"放大"}),(0,jsx_runtime.jsx)("div",{className:c("sep")}),(0,jsx_runtime.jsx)("button",{className:c("zoom-control"),onClick:this.goBackCenter,children:"回到中点"})]})})}constructor(...args){super(...args),this.zoom=1,this.state={zoom:this.zoom},this.zoomOut=()=>{const{minZoom,zoomStep,treeRef}=this.props;let{zoom}=this;if(zoom>minZoom){const newZoom=Math.round(100*zoom-100*zoomStep)/100;zoom=Math.max(newZoom,minZoom),treeRef.zoomSize(zoom),this.zoom=zoom}return zoom},this.zoomIn=()=>{const{maxZoom,zoomStep,treeRef}=this.props;let{zoom}=this;if(zoom<maxZoom){const newZoom=Math.round(100*zoom+100*zoomStep)/100;zoom=Math.min(newZoom,maxZoom),treeRef.zoomSize(zoom),this.zoom=zoom}return zoom},this.handleZoomOut=()=>{const{zoom:preZoom}=this.state,zoom=this.zoomOut();return zoom!==preZoom&&this.setState({zoom}),zoom},this.handleZoomIn=()=>{const{zoom:preZoom}=this.state,zoom=this.zoomIn();return zoom!==preZoom&&this.setState({zoom}),zoom},this.goBackCenter=()=>{const{treeRef}=this.props;treeRef.setCenterPosition({init:!0})}}}MultiTreeToolbar.defaultProps={maxZoom:1.25,minZoom:.25,zoomStep:.25};try{MultiTreeToolbar.displayName="MultiTreeToolbar",MultiTreeToolbar.__docgenInfo={description:"",displayName:"MultiTreeToolbar",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},maxZoom:{defaultValue:{value:"1.25"},description:"最大缩放倍数 默认1.25",name:"maxZoom",required:!1,type:{name:"number"}},minZoom:{defaultValue:{value:"0.25"},description:"最小缩放倍数 默认0.25",name:"minZoom",required:!1,type:{name:"number"}},zoomStep:{defaultValue:{value:"0.25"},description:"每次放大或缩小的步长 默认0.25",name:"zoomStep",required:!1,type:{name:"number"}},treeRef:{defaultValue:null,description:"指向 MultiTree 组件的引用",name:"treeRef",required:!0,type:{name:"MultiTree<T>"}},renderToolbar:{defaultValue:null,description:"自定义渲染工具栏方法",name:"renderToolbar",required:!1,type:{name:"(opt: { zoom: number; minZoom: number; maxZoom: number; zoomStep: number; zoomIn: () => number; zoomOut: () => number; goBackCenter: () => void; }) => React.ReactNode"}},onClick:{defaultValue:null,description:"工具栏最外层容器点击事件",name:"onClick",required:!1,type:{name:"React.MouseEventHandler<HTMLDivElement>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/multi-tree/src/toolbar/index.tsx#MultiTreeToolbar"]={docgenInfo:MultiTreeToolbar.__docgenInfo,name:"MultiTreeToolbar",path:"src/components/multi-tree/src/toolbar/index.tsx#MultiTreeToolbar"})}catch(__react_docgen_typescript_loader_error){}var src_style=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[14].use[1]!./node_modules/postcss-loader/dist/cjs.js!./node_modules/resolve-url-loader/index.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[14].use[4]!./src/components/multi-tree/src/style.scss"),style_options={};style_options.styleTagTransform=styleTagTransform_default(),style_options.setAttributes=setAttributesWithoutAttributes_default(),style_options.insert=insertBySelector_default().bind(null,"head"),style_options.domAPI=styleDomAPI_default(),style_options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(src_style.A,style_options);src_style.A&&src_style.A.locals&&src_style.A.locals;var console=__webpack_require__("./node_modules/console-browserify/index.js");const c=(0,index_es.G)("ohkit-multi-tree__");let treeChange=!0;class MultiTree extends react.Component{static getDerivedStateFromProps(nextProps,prevState){return nextProps.treeList!==prevState.treeList?(treeChange=!0,{treeList:nextProps.treeList}):null}getNodeDom(node){return this.nodeDomWeakMap.get(node)}setNodeDom(node,dom){this.nodeDomWeakMap.set(node,dom)}getNodeCtx(node){return this.nodeCtxWeakMap.get(node)}setNodeCtx(node,ctx){this.nodeCtxWeakMap.set(node,ctx)}get getLayoutOffset(){const{height,width}=this.props,minWidth=1.5*lodash_es_get(this.containerRef.current,"offsetWidth",width),minHeight=1.5*lodash_es_get(this.containerRef.current,"offsetHeight",height);return{height:Math.max(minHeight,1.5*height),width:Math.max(minWidth,1.5*width)}}initPosition(){this.__animationFrame&&(cancelAnimationFrame(this.__animationFrame),this.__animationFrame=null),this.__animationFrame=requestAnimationFrame(()=>{var _this_animateRemover;this.setCenterPosition({init:!0}),null===(_this_animateRemover=this.animateRemover)||void 0===_this_animateRemover||_this_animateRemover.call(this),this.animateRemover=this.layoutRef.current?(0,dom_helper_dist_index_es.iQ)(this.layoutRef.current,c("translate-animate")):null})}componentDidMount(){this.runtime.treeRenderCompleted&&(this.zoomSize(this.runtime.zoom),treeChange&&(treeChange=!1,this.initPosition()))}componentDidUpdate(prevProps,prevState){this.runtime.treeRenderCompleted&&prevState.renderSeq!==this.state.renderSeq&&(this.zoomSize(this.runtime.zoom),treeChange&&(treeChange=!1,this.initPosition()))}componentWillUnmount(){var _this_animateRemover;treeChange=!1,this.disposeMoveEvent(),null===(_this_animateRemover=this.animateRemover)||void 0===_this_animateRemover||_this_animateRemover.call(this)}renderTreeGroup(treeList=this.state.treeList){const{openLeftKey,openRightKey,leftTreePath,rightTreePath,layoutBgColor}=this.props;this.treeBuildBefore();const treeNodeList=[];treeList.forEach((tree,treeIndex)=>{const leftTreeNodeList=this.buildTreeToList({data:tree,treeIndex,path:leftTreePath,openKey:openLeftKey,direction:"left",includeCenterNode:!0}),rightTreeNodeList=this.buildTreeToList({data:tree,treeIndex,path:rightTreePath,openKey:openRightKey,direction:"right",otherSideTreeList:leftTreeNodeList});treeNodeList.push(...leftTreeNodeList,...rightTreeNodeList)});const treeDomList=treeNodeList.map(node=>this.renderNode(node)),result=(0,jsx_runtime.jsx)("div",{style:{backgroundColor:layoutBgColor},className:c("tree-layout-wrapper"),ref:this.scrollWrapperRef,onMouseDownCapture:e=>{if(2!==e.button){const cDom=this.scrollWrapperRef.current;if(!cDom)return;Object.assign(this.runtime.moveStartPos,{x:e.pageX,y:e.pageY,scrollTop:cDom.scrollTop,scrollLeft:cDom.scrollLeft}),this.enableMoveAction()}},onMouseMove:e=>{e.preventDefault()},children:(0,jsx_runtime.jsx)("div",{className:c("tree-layout"),ref:this.layoutRef,children:treeDomList})});return this.treeBuildAfter(),result}renderNode(node){const{cardWrapClassName,cardWidth,treeTopSpan,renderCard,leftTreePath,openLeftKey,leftNumKey,leftVirtualNumKey,rightVirtualNumKey,rightTreePath,openRightKey,rightNumKey,virtualNodeKey,topBottomLineRadius,toggleBtnSpan,onToggle}=this.props,{getNodePosition}=this,isLeftNode="left"===node.__direction,isRightNode="right"===node.__direction,leftChildren=node[leftTreePath],leftRealChildNum=(null==leftChildren?void 0:leftChildren.length)?leftChildren.filter(c=>!c[virtualNodeKey]).length:node[leftNumKey]||0,rightChildren=node[rightTreePath],rightRealChildNum=(null==rightChildren?void 0:rightChildren.length)?rightChildren.filter(c=>!c[virtualNodeKey]).length:node[rightNumKey]||0,leftVirtualChildNum=node[leftVirtualNumKey]||0,rightVirtualChildNum=node[rightVirtualNumKey]||0,hasLeftBtn=!isRightNode&&!!(leftRealChildNum+leftVirtualChildNum),hasRightBtn=!isLeftNode&&!!(rightRealChildNum+rightVirtualChildNum),openLeft=!isRightNode&&node[openLeftKey],openRight=!isLeftNode&&node[openRightKey],isVirtualNode=node[virtualNodeKey],isTopChild=!!node.__isFirst&&!node.__isLast,isBottomChild=!!node.__isLast&&!node.__isFirst,height=getNodePosition(node,"height"),left=getNodePosition(node,"left"),top=getNodePosition(node,"top"),nodeCtx=this.getNodeCtx(node),key=`${node.__treeIndex}-${node.__direction}-${null==nodeCtx?void 0:nodeCtx.paths.join("-")}-${node.id||node.key||node.__uniKey||(node.__uniKey=function getEasyUniKey(){return 1e6*Math.random()|0}())}`;return(0,jsx_runtime.jsx)(dist_index_es.t$,{offset:!0,throttleMs:0,children:({measureRef,contentRect})=>{if(contentRect.offset){const{width:newWidth,height:newHeight}=contentRect.offset;if(newHeight&&height&&newHeight!==height){console.log(height,"=>",newHeight,"--- node height size change, need refresh");Math.abs(newHeight-height)>1&&(this.runtime.positionDirty=!0,this.debounceHeightChange(node))}void 0!==newHeight&&void 0!==newWidth&&newHeight+newWidth>0&&(this.nodeWidth=Math.max(this.nodeWidth,newWidth||cardWidth),this.setNodePosition(node,{width:newWidth,height:newHeight}))}return(0,jsx_runtime.jsx)("div",{className:(0,index_es.x)(c("card"),cardWrapClassName),ref:r=>{r&&(this.setNodeDom(node,r),(0,react_helper_dist_index_es.bl)(measureRef,r))},style:{top:top||0,left:left||0,width:this.nodeWidth||cardWidth,visibility:lodash_es_isNil(top)?"hidden":"inherit"},children:(0,jsx_runtime.jsxs)("div",{className:c("card-content"),children:[renderCard?renderCard(node):this.renderDefaultCard(node,key),this.renderToggleButton({hasLeftBtn,hasRightBtn,openLeft,openRight,onToggle,node,rightTreePath,rightRealChildNum,rightVirtualChildNum,leftTreePath,leftVirtualChildNum,leftRealChildNum,toggleBtnSpan}),this.renderHorizontalLine({isLeftNode,isRightNode,isTopChild,isBottomChild,isVirtualNode,node,topBottomLineRadius,treeTopSpan})]})},key)}},`mea-${key}`)}renderDefaultCard(node,key){const{cardWidth}=this.props,style={width:cardWidth,textAlign:"center"};return(0,jsx_runtime.jsx)("div",{className:c("d-card"),style,children:node.label||key})}renderToggleButton({hasLeftBtn,hasRightBtn,openLeft,openRight,onToggle,node,rightTreePath,rightRealChildNum,rightVirtualChildNum,leftTreePath,leftVirtualChildNum,leftRealChildNum,toggleBtnSpan}){if(!hasLeftBtn&&!hasRightBtn)return null;const{lineSize,lineColor,toggleBtnSize}=this.props,getComp=xKey=>{const vLineComStyle={[xKey]:-(2*toggleBtnSpan+toggleBtnSize+lineSize),borderLeftWidth:lineSize,borderLeftColor:lineColor},isRenderLeft="left"===xKey,sLineComStyle={width:toggleBtnSpan,borderTopWidth:lineSize,borderTopColor:lineColor,borderTopStyle:(isRenderLeft?!leftRealChildNum:!rightRealChildNum)?"dashed":"solid",transform:`translateY(-${lineSize/2}px)`},showChild=isRenderLeft?openLeft:openRight,hasVirtualChild=(isRenderLeft?leftVirtualChildNum:rightVirtualChildNum)>0,childNodeList=node[isRenderLeft?leftTreePath:rightTreePath]||[],showVerticalLine=(null==childNodeList?void 0:childNodeList.length)>1,childOffsetInfoReady=this.getNodePosition(childNodeList[0],"height",-1)>=0,displayChildCount=isRenderLeft?leftRealChildNum:rightRealChildNum;return(0,jsx_runtime.jsxs)("div",{className:c("btn-line-wrapper"),style:{top:node.__forkPointTopOffset,[xKey]:0},children:[(0,jsx_runtime.jsxs)("div",{className:(0,index_es.x)(c("toggle-btn"),hasVirtualChild&&"has-virtual"),style:{[xKey]:-(toggleBtnSpan+toggleBtnSize),width:toggleBtnSize,height:toggleBtnSize},onClick:async()=>{const dom=this.getNodeDom(node),loadingRemover=dom&&(0,dom_helper_dist_index_es.iQ)(dom,`loading-${xKey}-child-tree`);await this.toggleChildTree(node,xKey),null==loadingRemover||loadingRemover(),null==onToggle||onToggle(node,xKey)},children:[showChild?(0,jsx_runtime.jsx)("span",{className:"icon-fold"}):`${displayChildCount}`,(0,jsx_runtime.jsx)("div",{className:(0,index_es.x)("loading-icon",`${xKey}-loading`)})]}),(0,jsx_runtime.jsx)("div",{className:c("short-line"),style:{[xKey]:-toggleBtnSpan,...sLineComStyle}}),showChild&&childOffsetInfoReady&&(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)("div",{className:c("short-line"),style:{[xKey]:-(2*toggleBtnSpan+toggleBtnSize),...sLineComStyle}}),showVerticalLine&&(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)("div",{className:c("vertical-line-dashed"),style:{height:this.getVerticalLineHeight(childNodeList),...vLineComStyle}}),(0,jsx_runtime.jsx)("div",{className:c("vertical-line"),style:{...this.getVerticalSolidLineHeightAndTop(childNodeList,node),...vLineComStyle}})]})]})]})};return(0,jsx_runtime.jsxs)(react.Fragment,{children:[hasLeftBtn&&getComp("left"),hasRightBtn&&getComp("right")]})}renderHorizontalLine({isLeftNode,isRightNode,isTopChild,isVirtualNode,isBottomChild,node,topBottomLineRadius,treeTopSpan}){if(!isLeftNode&&!isRightNode)return null;const{lineSize,lineColor}=this.props,borderLine=`${lineSize}px solid ${lineColor}`,ryKey=isTopChild?"Top":"Bottom",rxKey=isLeftNode?"Right":"Left",halfHeight=this.getNodePosition(node,"height",0)/2||1/0,isTopOrBottomChild=isTopChild||isBottomChild,width=this.getHorizontalLineWidth();return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)("div",{className:(0,index_es.x)(c("horizontal-line",isLeftNode?"horizontal-line-right":"horizontal-line-left"),isBottomChild?"bottom-line":isTopChild?"top-line":"middle-line"),style:{height:isTopOrBottomChild?Math.min(this.getTopBottomToParentDistance(node),halfHeight+lineSize/2):0,width,[rxKey.toLowerCase()]:-width,[ryKey.toLowerCase()]:"50%",[`border${ryKey}${rxKey}Radius`]:isTopOrBottomChild?topBottomLineRadius:void 0,[`border${rxKey}`]:borderLine,[`border${rxKey}Style`]:isVirtualNode?"dashed":"solid",["border"+(isBottomChild?"Bottom":"Top")]:borderLine,[`border${isBottomChild?"Bottom":"Top"}Style`]:isVirtualNode?"dashed":"solid",transform:`translateY(${(isBottomChild?1:-1)*lineSize/2}px)`}}),this.renderMask({isLeftNode,isTopChild,isBottomChild,width,height:halfHeight+Math.min(halfHeight,topBottomLineRadius)+treeTopSpan,offsetY:treeTopSpan})]})}renderMask({isLeftNode,isTopChild,isBottomChild,width,height,offsetY}){if(!isTopChild&&!isBottomChild)return null;const yKey=isTopChild?"top":"bottom",xKey=isLeftNode?"right":"left";return(0,jsx_runtime.jsx)("div",{className:c("top-bottom-line-mask"),style:{width,height,[xKey]:-width,[yKey]:-offsetY,backgroundColor:this.props.layoutBgColor}})}render(){const{className,renderToolbar,toolbarProps}=this.props;return(0,jsx_runtime.jsxs)("div",{ref:this.containerRef,className:(0,index_es.x)(c("container"),className),children:[this.renderTreeGroup(),(0,jsx_runtime.jsx)(MultiTreeToolbar,{renderToolbar,treeRef:this,...toolbarProps})]})}constructor(...args){super(...args),this.nodeWidth=0,this.scrollWrapperRef=(0,react.createRef)(),this.layoutRef=(0,react.createRef)(),this.containerRef=(0,react.createRef)(),this.treeWrapperRef=(0,react.createRef)(),this.nodeDomWeakMap=new WeakMap,this.nodeCtxWeakMap=new WeakMap,this.nodePositionWeakMap=new WeakMap,this.setNodePosition=(node,position)=>{const oldPosition=this.nodePositionWeakMap.get(node);oldPosition?Object.assign(oldPosition||{},position):this.nodePositionWeakMap.set(node,position)},this.getNodePosition=(node,key,defaultValue)=>{const position=this.nodePositionWeakMap.get(node);return key?lodash_es_get(position,key,defaultValue):position},this.layout={minLeft:0,minTop:0,maxLeft:0,maxTop:0},this.state={renderSeq:0,treeList:[]},this.runtime={treeRending:!1,treeRenderCompleted:!1,moveStartPos:{x:0,y:0,scrollLeft:0,scrollTop:0},moveStart:!1,moveEnd:!0,moving:!1,zoom:1,positionDirty:!1,refreshTriggerNode:null,scrollTopBeforeChange:0,scrollLeftBeforeChange:0,nodeClientRectTopBeforeChange:0,nodeClientRectLeftBeforeChange:0,offsetInfoReady:!1},this.refresh=cb=>{this.runtime.treeRending||(this.runtime.positionDirty&&console.log("--- has node size change, exec refresh ---"),this.setState({renderSeq:this.state.renderSeq+1},()=>{this.runtime.positionDirty=!1,null==cb||cb()}))},this.debounceHeightChange=(0,debounce.A)(node=>{this.recordChangeNodeInfo(node),this.refresh()},20),this.debounceRefresh=(0,debounce.A)(this.refresh.bind(this),20),this.treeBuildBefore=()=>{this.runtime.treeRending=!0,this.runtime.offsetInfoReady=!0,this.runtime.treeRenderCompleted=!1,this.maxTopMap={},Object.assign(this.layout,{minLeft:1/0,minTop:1/0,maxLeft:0,maxTop:0})},this.treeBuildAfter=()=>{this.runtime.treeRending=!1,this.runtime.offsetInfoReady?this.runtime.treeRenderCompleted=!0:this.debounceRefresh()},this.zoomSize=(zoom=this.runtime.zoom)=>{const{layoutSafeMargin}=this.props;requestAnimationFrame(()=>{if(this.layoutRef.current){const safeBase=layoutSafeMargin,safeSpan=safeBase*zoom*(zoom+1),{maxLeft,minLeft,minTop,maxTop}=this.layout,{height,width}=this.getLayoutOffset,newWidth=Math.max(maxLeft,width),newHeight=Math.max(maxTop,height),needTransX=-Math.min(minLeft,0),needTransY=-Math.min(minTop,0),zoomAddWidth=newWidth*(1/zoom-1)/2,zoomAddHeight=newHeight*(zoom-1)/2;let transX=needTransX*zoom+zoomAddWidth*zoom;minLeft<-transX&&(transX=-minLeft);const style={width:`${newWidth+zoomAddWidth+safeSpan}px`,height:`${newHeight+(zoom>1?0:zoomAddHeight)+safeBase}px`,transform:`translate(${transX+safeSpan}px, ${needTransY+zoomAddHeight*zoom+safeBase}px) scale(${zoom})`};if(zoom>=1&&zoom!==this.runtime.zoom&&this.runtime.zoom>=1){const cDom=this.scrollWrapperRef.current;if(!cDom)return;const{scrollLeft,scrollWidth}=cDom;setTimeout(()=>{const{scrollWidth:nextScrollWidth,offsetWidth}=cDom;cDom.scrollTo({left:scrollLeft*(nextScrollWidth-offsetWidth)/(scrollWidth-offsetWidth),behavior:"smooth"})},300)}Object.assign(this.layoutRef.current.style,style),this.runtime.zoom=zoom,this.adjustTopIfNeed()}})},this.disposeMoveEvent=()=>{var _this_moveEndRemover,_this_movingRemover;null===(_this_moveEndRemover=this.moveEndRemover)||void 0===_this_moveEndRemover||_this_moveEndRemover.call(this),null===(_this_movingRemover=this.movingRemover)||void 0===_this_movingRemover||_this_movingRemover.call(this)},this.__animationFrame=null,this.animateRemover=null,this.moveEndRemover=null,this.movingRemover=null,this.maxTopMap={},this.buildTreeToList=({treeList=this.state.treeList,data=this.state.treeList[0],treeIndex=0,path,openKey,direction="left",includeCenterNode=!1,otherSideTreeList=[]})=>{const treeToList=[];if(!data)return treeToList;const{cardWidth,cardHeightSpan,cardWidthSpan,treeTopSpan}=this.props,{height,width}=this.getLayoutOffset,{getNodePosition,setNodePosition}=this;return(0,visit_tree.sync)(data,(node,ctx)=>{if(this.setNodeCtx(node,ctx),node.__direction=direction,node.__treeIndex=treeIndex,ctx.parent||(node.__isRoot=!0,node.__direction="center"),lodash_es_isNil(getNodePosition(node,"width")))return this.runtime.offsetInfoReady=!1,void(node.__isRoot&&!includeCenterNode||treeToList.push(node));const nodeHeight=getNodePosition(node,"height");if(lodash_es_isNil(nodeHeight)||(node.__forkPointTopOffset?node.__forkPointTopOffset=Math.min(nodeHeight/2,node.__forkPointTopOffset):node.__forkPointTopOffset=nodeHeight/2),!ctx.parent){if(!includeCenterNode)return void(node[openKey]||ctx.skip());let top=0,left=0;if(0===treeIndex){const centerCardTotalHeight=treeList.reduce((pre,cur)=>pre+getNodePosition(cur,"height",0),0)+(treeList.length-1)*cardHeightSpan,spanWidth=this.nodeWidth||cardWidth;top=(Math.max(centerCardTotalHeight,height)-centerCardTotalHeight)/2,left=(width-spanWidth)/2}else{const prevPeedNode=treeList[treeIndex-1],spanHeight=getNodePosition(prevPeedNode,"height",0)+cardHeightSpan;top=getNodePosition(prevPeedNode,"top",0)+spanHeight,left=getNodePosition(prevPeedNode,"left",0),this.layout.maxTop=Math.max(this.layout.maxTop,top+spanHeight)}return setNodePosition(node,{top,left}),treeToList.push(node),void(node[openKey]||ctx.skip())}const peerNodes=ctx.parent[path];node.__isFirst=0===ctx.index,node.__isLast=ctx.index===peerNodes.length-1;const prevPeerNode=peerNodes[ctx.index-1],spanWidth=this.nodeWidth+cardWidthSpan,spanHeight=getNodePosition(prevPeerNode,"height",0)+cardHeightSpan,totalHeight=peerNodes.reduce((pre,cur)=>pre+getNodePosition(cur,"height",0),0)+(peerNodes.length-1)*cardHeightSpan,parentForkPointTopOffset=lodash_es_get(ctx.parent,"__forkPointTopOffset")||getNodePosition(ctx.parent,"height",0)/2;let firstPeerNodeTop=getNodePosition(ctx.parent,"top",0)+parentForkPointTopOffset-totalHeight/2;if(peerNodes.length>1){const firstPeer=peerNodes[0],lastPeer=peerNodes[peerNodes.length-1];firstPeerNodeTop-=(getNodePosition(firstPeer,"height",0)-getNodePosition(lastPeer,"height",0))/4}let top=ctx.index?getNodePosition(prevPeerNode,"top",0)+spanHeight:firstPeerNodeTop;const left=getNodePosition(ctx.parent,"left",0)+("left"===direction?-spanWidth:+spanWidth),setSameColumnMaxTopInfo=(depth=ctx.depth)=>{this.maxTopMap[treeIndex]||(this.maxTopMap[treeIndex]={[direction]:{}}),this.maxTopMap[treeIndex][direction]||(this.maxTopMap[treeIndex][direction]={}),this.maxTopMap[treeIndex][direction][depth]||(this.maxTopMap[treeIndex][direction][depth]={});const preMaxTop=this.maxTopMap[treeIndex][direction][depth].maxTop||-1/0,curNodeTop=top+getNodePosition(node,"height",0)+treeTopSpan;preMaxTop<curNodeTop&&Object.assign(this.maxTopMap[treeIndex][direction][depth],{maxTop:curNodeTop,node})},{preMaxTop=-1/0,atCurTree}=(()=>{const curTreePreNode=lodash_es_get(this.maxTopMap[treeIndex],`${direction}.${ctx.depth}`);if(curTreePreNode)return{preMaxTop:curTreePreNode.maxTop,node:curTreePreNode.node,atCurTree:!0};{let preTreePreNode={};for(let i=treeIndex-1;i>=0&&(preTreePreNode=lodash_es_get(this.maxTopMap[i],`${direction}.${ctx.depth}`,{}),!preTreePreNode.node);i--);return{preMaxTop:preTreePreNode.maxTop,node:preTreePreNode.node,atCurTree:!1}}})();if(top<preMaxTop){let diff=preMaxTop-top;if(top=preMaxTop,atCurTree){const len=ctx.parents.length;let walkDepth=ctx.depth;for(let i=len-1;i>=0;i--){const walkNode=ctx.parents[i];setNodePosition(walkNode,{top:getNodePosition(walkNode,"top")+diff}),--walkDepth;const nodeInfo=lodash_es_get(this.maxTopMap,`${treeIndex}.${direction}.${walkDepth}`);nodeInfo&&(nodeInfo.maxTop=diff+(nodeInfo.maxTop||0));const walkNodeCtx=this.getNodeCtx(walkNode);walkNodeCtx&&walkNodeCtx.index>0&&(diff/=2)}}else{const adjusted={};treeToList.forEach(n=>{getNodePosition(n)&&setNodePosition(n,{top:getNodePosition(n,"top")+diff});const nodeCtx=this.getNodeCtx(n);if(nodeCtx&&!adjusted[nodeCtx.depth]){adjusted[nodeCtx.depth]=!0;const nodeInfo=lodash_es_get(this.maxTopMap,`${treeIndex}.${direction}.${nodeCtx.depth}`);nodeInfo&&(nodeInfo.maxTop=diff+(nodeInfo.maxTop||0))}})}const adjusted={};otherSideTreeList.forEach(n=>{if(!atCurTree||!n.__isRoot){getNodePosition(n)&&setNodePosition(n,{top:getNodePosition(n,"top")+diff});const nodeCtx=this.getNodeCtx(n);if(nodeCtx&&n.__direction&&!adjusted[nodeCtx.depth]){adjusted[nodeCtx.depth]=!0;const nodeInfo=lodash_es_get(this.maxTopMap,`${treeIndex}.${n.__direction}.${nodeCtx.depth}`);nodeInfo&&(nodeInfo.maxTop=diff+(nodeInfo.maxTop||0))}}})}setNodePosition(node,{top,left}),"left"===direction?this.layout.minLeft=Math.min(this.layout.minLeft,left):this.layout.maxLeft=Math.max(this.layout.maxLeft,left+spanWidth),this.layout.minTop=Math.min(this.layout.minTop,top),this.layout.maxTop=Math.max(this.layout.maxTop,top+spanHeight),peerNodes.length===ctx.index+1&&setSameColumnMaxTopInfo(),treeToList.push(node),node[openKey]||ctx.skip()},{path}),treeToList},this.adjustTopIfNeed=()=>{const{refreshTriggerNode,scrollTopBeforeChange,scrollLeftBeforeChange}=this.runtime;if(refreshTriggerNode){const refreshTriggerNodeDom=this.getNodeDom(refreshTriggerNode);if(!refreshTriggerNodeDom)return;const{top,left}=refreshTriggerNodeDom.getBoundingClientRect(),clientRectTopDiff=top-this.runtime.nodeClientRectTopBeforeChange,clientRectLeftDiff=left-this.runtime.nodeClientRectLeftBeforeChange,diffTop=clientRectTopDiff>=0?Math.ceil(clientRectTopDiff):Math.floor(clientRectTopDiff),diffLeft=clientRectLeftDiff>=0?Math.ceil(clientRectLeftDiff):Math.floor(clientRectLeftDiff),sDom=this.scrollWrapperRef.current,nextScrollTop=scrollTopBeforeChange+diffTop,nextScrollLeft=scrollLeftBeforeChange+diffLeft;null==sDom||sDom.scrollTo({top:nextScrollTop,left:nextScrollLeft}),this.runtime.refreshTriggerNode=null}},this.recordChangeNodeInfo=node=>{this.runtime.refreshTriggerNode=node;const scrollDom=this.scrollWrapperRef.current;scrollDom&&(this.runtime.scrollTopBeforeChange=scrollDom.scrollTop,this.runtime.scrollLeftBeforeChange=scrollDom.scrollLeft);const dom=this.getNodeDom(node);if(dom){const{top,left}=dom.getBoundingClientRect();this.runtime.nodeClientRectTopBeforeChange=top,this.runtime.nodeClientRectLeftBeforeChange=left}},this.setCenterPosition=(options={})=>{const{behavior="auto",init=!1}=options;if(init){const sDom=this.scrollWrapperRef.current;if(sDom){sDom.scrollTo({left:(sDom.scrollWidth-sDom.offsetWidth)/2,top:(sDom.scrollHeight-sDom.offsetHeight)/2,behavior});const{visiableNode=this.state.treeList[0]}=this.props,visiableNodeDom=visiableNode?this.getNodeDom(visiableNode):null;visiableNodeDom&&this.scrollNodeIntoView(visiableNodeDom,{behavior:"auto"})}}else{const cDom=this.getNodeDom(this.state.treeList[0]);cDom&&cDom.scrollIntoView({behavior,block:"center",inline:"center"})}},this.scrollNodeIntoView=(dom,opt={})=>{if(!dom)return;const{toggleBtnSpan,toggleBtnSize}=this.props,xSpan=toggleBtnSpan+toggleBtnSize+20;(0,dom_helper_dist_index_es.$v)(dom,{behavior:"smooth",offsetTop:100,offsetBottom:100,offsetLeft:xSpan,offsetRight:xSpan,...opt})},this.enableMoveAction=()=>{const cDom=this.scrollWrapperRef.current;if(!cDom)return;const{x,y,scrollLeft,scrollTop}=this.runtime.moveStartPos;this.runtime.moveStart=!0,this.runtime.moveEnd=!1,cDom.style.cursor="grabbing",this.disposeMoveEvent(),this.movingRemover=(0,dom_helper_dist_index_es.q2)(document,"mousemove",(0,throttle.A)(e=>{const diffX=e.pageX-x,diffY=e.pageY-y;this.runtime.moveEnd||this.runtime.moving||!(Math.abs(diffX)>1||Math.abs(diffY)>1)||(this.runtime.moving=!0),this.runtime.moving&&cDom.scrollTo(scrollLeft-diffX,scrollTop-diffY)},50)),this.moveEndRemover=(0,dom_helper_dist_index_es.q2)(document,"mouseup",()=>{this.runtime.moving=!1,this.runtime.moveStart=!1,this.runtime.moveEnd=!0,cDom.style.cursor="",this.disposeMoveEvent()},!0)},this.getNodeCenterTop=(node,offset)=>this.getNodePosition(node,"top",0)+(offset||this.getNodePosition(node,"height",0)/2),this.getHorizontalLineWidth=()=>{const{cardWidthSpan,toggleBtnSpan,toggleBtnSize}=this.props;return cardWidthSpan-2*toggleBtnSpan-toggleBtnSize},this.getVerticalLineHeight=nodeList=>{if(!nodeList)return 0;const{getNodeCenterTop}=this,topNode=nodeList[0],bottomNode=nodeList[nodeList.length-1],topNodeHalfHeight=this.getNodePosition(topNode,"height",0)/2,bottomNodeHalfHeight=this.getNodePosition(bottomNode,"height",0)/2;return getNodeCenterTop(bottomNode)-getNodeCenterTop(topNode)-2*Math.min(topNodeHalfHeight,bottomNodeHalfHeight)+1},this.getTopBottomToParentDistance=node=>{const{parent:parentNode}=this.getNodeCtx(node)||{};if(!parentNode)return 0;const{getNodeCenterTop}=this;return Math.abs(getNodeCenterTop(parentNode,parentNode.__forkPointTopOffset)-getNodeCenterTop(node))},this.getVerticalSolidLineHeightAndTop=(nodeList,parentNode)=>{const{virtualNodeKey,topBottomLineRadius,lineSize}=this.props,{getNodeCenterTop}=this,parentNodeCenterTop=getNodeCenterTop(parentNode,parentNode.__forkPointTopOffset);let height=0,firstRealNodeCenterTop=null,lastRealNodeCenterTop=null;for(let i=0;i<nodeList.length;i++){const node=nodeList[i];if(!node[virtualNodeKey]){const centerTop=getNodeCenterTop(node);null===firstRealNodeCenterTop&&(firstRealNodeCenterTop=centerTop),lastRealNodeCenterTop=centerTop}}let offsetTop=0;return null!==firstRealNodeCenterTop&&null!==lastRealNodeCenterTop&&(firstRealNodeCenterTop<parentNodeCenterTop?(height=Math.max(lastRealNodeCenterTop,parentNodeCenterTop)-firstRealNodeCenterTop,offsetTop=firstRealNodeCenterTop-parentNodeCenterTop):height=lastRealNodeCenterTop-parentNodeCenterTop,nodeList[0][virtualNodeKey]||(height-=topBottomLineRadius,offsetTop+=topBottomLineRadius-lineSize/2),nodeList[nodeList.length-1][virtualNodeKey]||(height-=topBottomLineRadius)),{height:height?height+lineSize/2+1:0,top:offsetTop}},this.toggleChildTree=async(node,direction="left")=>{const{fetchChildTree,needCache,cacheMaxAge,leftTreePath,openLeftKey,leftNumKey,rightTreePath,openRightKey,rightNumKey,leftVirtualNumKey,rightVirtualNumKey,virtualNodeKey}=this.props;let treePath,openKey,numKey,virtualNumKey;if("left"===direction?(treePath=leftTreePath,openKey=openLeftKey,numKey=leftNumKey,virtualNumKey=leftVirtualNumKey):(treePath=rightTreePath,openKey=openRightKey,numKey=rightNumKey,virtualNumKey=rightVirtualNumKey),!node[openKey]&&fetchChildTree){const fetchData=async()=>{const childList=await fetchChildTree(node,direction)||[];node[treePath]=childList;let virtualChildNum=0;for(const childNode of childList)childNode[virtualNodeKey]&&virtualChildNum++;node[virtualNumKey]=virtualChildNum,node[numKey]=childList.length-virtualChildNum,node.__childrenUpdateTime=Date.now()};if(needCache){(!node[treePath]||!node[treePath].length||!node.__childrenUpdateTime||Date.now()-node.__childrenUpdateTime>cacheMaxAge)&&await fetchData()}else await fetchData()}node[openKey]=!node[openKey],this.recordChangeNodeInfo(node),this.refresh(()=>{setTimeout(()=>{let dom;if(node[openKey]){const childList=node[treePath],middleNode=childList[Math.floor(childList.length/2)];dom=this.getNodeDom(middleNode)}else dom=this.getNodeDom(node);this.scrollNodeIntoView(dom)},150)})}}}MultiTree.defaultProps={treeList:[],height:800,width:1280,layoutSafeMargin:100,layoutBgColor:"#f7f8fa",needCache:!0,cacheMaxAge:1/0,cardWidth:200,cardWidthSpan:98,cardHeightSpan:20,treeTopSpan:50,lineSize:2,lineColor:"#4c84ff",topBottomLineRadius:12,toggleBtnSize:26,toggleBtnSpan:16,leftTreePath:"left",rightTreePath:"right",leftNumKey:"leftNum",rightNumKey:"rightNum",leftVirtualNumKey:"leftVirtualNum",rightVirtualNumKey:"rightVirtualNum",openLeftKey:"openLeft",openRightKey:"openRight",virtualNodeKey:"isVirtual"};try{c.displayName="c",c.__docgenInfo={description:"",displayName:"c",props:{length:{defaultValue:null,description:"Gets or sets the length of the array. This is a number one higher than the highest index in the array.",name:"length",required:!0,type:{name:"number"}},toString:{defaultValue:null,description:"Returns a string representation of an array.",name:"toString",required:!1,type:{name:"() => string"}},toLocaleString:{defaultValue:null,description:"Returns a string representation of an array. The elements are converted to string using their toLocaleString methods.",name:"toLocaleString",required:!1,type:{name:"() => string"}},pop:{defaultValue:null,description:"Removes the last element from an array and returns it.\nIf the array is empty, undefined is returned and the array is not modified.",name:"pop",required:!0,type:{name:"() => Argument"}},push:{defaultValue:null,description:"Appends new elements to the end of an array, and returns the new length of the array.\n@param items New elements to add to the array.",name:"push",required:!0,type:{name:"(...items: Argument[]) => number"}},concat:{defaultValue:null,description:"Combines two or more arrays.\nThis method returns a new array without modifying any existing arrays.\n@param items Additional arrays and/or items to add to the end of the array.\n@param items Additional arrays and/or items to add to the end of the array.",name:"concat",required:!0,type:{name:"{ (...items: ConcatArray<Argument>[]): Argument[]; (...items: (Argument | ConcatArray<Argument>)[]): Argument[]; }"}},join:{defaultValue:null,description:"Adds all the elements of an array into a string, separated by the specified separator string.\n@param separator A string used to separate one element of the array from the next in the resulting string. If omitted, the array elements are separated with a comma.",name:"join",required:!0,type:{name:"(separator?: string) => string"}},reverse:{defaultValue:null,description:"Reverses the elements in an array in place.\nThis method mutates the array and returns a reference to the same array.",name:"reverse",required:!0,type:{name:"() => Argument[]"}},shift:{defaultValue:null,description:"Removes the first element from an array and returns it.\nIf the array is empty, undefined is returned and the array is not modified.",name:"shift",required:!0,type:{name:"() => Argument"}},slice:{defaultValue:null,description:"Returns a copy of a section of an array.\nFor both start and end, a negative index can be used to indicate an offset from the end of the array.\nFor example, -2 refers to the second to last element of the array.\n@param start The beginning index of the specified portion of the array.\nIf start is undefined, then the slice begins at index 0.\n@param end The end index of the specified portion of the array. This is exclusive of the element at the index 'end'.\nIf end is undefined, then the slice extends to the end of the array.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => Argument[]"}},sort:{defaultValue:null,description:"Sorts an array in place.\nThis method mutates the array and returns a reference to the same array.\n@param compareFn Function used to determine the order of the elements. It is expected to return\na negative value if the first argument is less than the second argument, zero if they're equal, and a positive\nvalue otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\n```ts\n[11,2,22,1].sort((a, b) => a - b)\n```",name:"sort",required:!0,type:{name:"(compareFn?: (a: Argument, b: Argument) => number) => ArgumentArray"}},splice:{defaultValue:null,description:"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@returns An array containing the elements that were deleted.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param items Elements to insert into the array in place of the deleted elements.\n@returns An array containing the elements that were deleted.",name:"splice",required:!0,type:{name:"{ (start: number, deleteCount?: number): Argument[]; (start: number, deleteCount: number, ...items: Argument[]): Argument[]; }"}},unshift:{defaultValue:null,description:"Inserts new elements at the start of an array, and returns the new length of the array.\n@param items Elements to insert at the start of the array.",name:"unshift",required:!0,type:{name:"(...items: Argument[]) => number"}},indexOf:{defaultValue:null,description:"Returns the index of the first occurrence of a value in an array, or -1 if it is not present.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.",name:"indexOf",required:!0,type:{name:"(searchElement: Argument, fromIndex?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the index of the last occurrence of a specified value in an array, or -1 if it is not present.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin searching backward. If fromIndex is omitted, the search starts at the last index in the array.",name:"lastIndexOf",required:!0,type:{name:"(searchElement: Argument, fromIndex?: number) => number"}},every:{defaultValue:null,description:"Determines whether all the members of an array satisfy the specified test.\n@param predicate A function that accepts up to three arguments. The every method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value false, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value.\n@param predicate A function that accepts up to three arguments. The every method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value false, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value.",name:"every",required:!0,type:{name:"{ <S extends Argument>(predicate: (value: Argument, index: number, array: Argument[]) => value is S, thisArg?: any): this is S[]; (predicate: (value: Argument, index: number, array: Argument[]) => unknown, thisArg?: any): boolean; }"}},some:{defaultValue:null,description:"Determines whether the specified callback function returns true for any element of an array.\n@param predicate A function that accepts up to three arguments. The some method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value true, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value.",name:"some",required:!0,type:{name:"(predicate: (value: Argument, index: number, array: Argument[]) => unknown, thisArg?: any) => boolean"}},forEach:{defaultValue:null,description:"Performs the specified action for each element in an array.\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"forEach",required:!0,type:{name:"(callbackfn: (value: Argument, index: number, array: Argument[]) => void, thisArg?: any) => void"}},map:{defaultValue:null,description:"Calls a defined callback function on each element of an array, and returns an array that contains the results.\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"map",required:!0,type:{name:"<U>(callbackfn: (value: Argument, index: number, array: Argument[]) => U, thisArg?: any) => U[]"}},filter:{defaultValue:null,description:"Returns the elements of an array that meet the condition specified in a callback function.\n@param predicate A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.\n@param predicate A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.",name:"filter",required:!0,type:{name:"{ <S extends Argument>(predicate: (value: Argument, index: number, array: Argument[]) => value is S, thisArg?: any): S[]; (predicate: (value: Argument, index: number, array: Argument[]) => unknown, thisArg?: any): Argument[]; }"}},reduce:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduce",required:!0,type:{name:"{ (callbackfn: (previousValue: Argument, currentValue: Argument, currentIndex: number, array: Argument[]) => Argument): Argument; (callbackfn: (previousValue: Argument, currentValue: Argument, currentIndex: number, array: Argument[]) => Argument, initialValue: Argument): Argument; <U>(callbackfn: (previousValue: U, ..."}},reduceRight:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduceRight",required:!0,type:{name:"{ (callbackfn: (previousValue: Argument, currentValue: Argument, currentIndex: number, array: Argument[]) => Argument): Argument; (callbackfn: (previousValue: Argument, currentValue: Argument, currentIndex: number, array: Argument[]) => Argument, initialValue: Argument): Argument; <U>(callbackfn: (previousValue: U, ..."}},find:{defaultValue:null,description:"Returns the value of the first element in the array where predicate is true, and undefined\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\norder, until it finds one where predicate returns true. If such an element is found, find\nimmediately returns that element value. Otherwise, find returns undefined.\n@param thisArg If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead.",name:"find",required:!0,type:{name:"{ <S extends Argument>(predicate: (this: void, value: Argument, index: number, obj: Argument[]) => value is S, thisArg?: any): S; (predicate: (value: Argument, index: number, obj: Argument[]) => unknown, thisArg?: any): Argument; }"}},findIndex:{defaultValue:null,description:"Returns the index of the first element in the array where predicate is true, and -1\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\norder, until it finds one where predicate returns true. If such an element is found,\nfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\n@param thisArg If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead.",name:"findIndex",required:!0,type:{name:"(predicate: (value: Argument, index: number, obj: Argument[]) => unknown, thisArg?: any) => number"}},fill:{defaultValue:null,description:"Changes all array elements from `start` to `end` index to a static `value` and returns the modified array\n@param value value to fill array section with\n@param start index to start filling the array at. If start is negative, it is treated as\nlength+start where length is the length of the array.\n@param end index to stop filling the array at. If end is negative, it is treated as\nlength+end.",name:"fill",required:!0,type:{name:"(value: Argument, start?: number, end?: number) => ArgumentArray"}},copyWithin:{defaultValue:null,description:"Returns the this object after copying a section of the array identified by start and end\nto the same array starting at position target\n@param target If target is negative, it is treated as length+target where length is the\nlength of the array.\n@param start If start is negative, it is treated as length+start. If end is negative, it\nis treated as length+end.\n@param end If not specified, length of the this object is used as its default value.",name:"copyWithin",required:!0,type:{name:"(target: number, start: number, end?: number) => ArgumentArray"}},entries:{defaultValue:null,description:"Returns an iterable of key, value pairs for every entry in the array",name:"entries",required:!0,type:{name:"() => IterableIterator<[number, Argument]>"}},keys:{defaultValue:null,description:"Returns an iterable of keys in the array",name:"keys",required:!0,type:{name:"() => IterableIterator<number>"}},values:{defaultValue:null,description:"Returns an iterable of values in the array",name:"values",required:!0,type:{name:"() => IterableIterator<Argument>"}},includes:{defaultValue:null,description:"Determines whether an array includes a certain element, returning true or false as appropriate.\n@param searchElement The element to search for.\n@param fromIndex The position in this array at which to begin searching for searchElement.",name:"includes",required:!0,type:{name:"(searchElement: Argument, fromIndex?: number) => boolean"}},flatMap:{defaultValue:null,description:"Calls a defined callback function on each element of an array. Then, flattens the result into\na new array.\nThis is identical to a map followed by flat with depth 1.\n@param callback A function that accepts up to three arguments. The flatMap method calls the\ncallback function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callback function. If\nthisArg is omitted, undefined is used as the this value.",name:"flatMap",required:!0,type:{name:"<U, This = undefined>(callback: (this: This, value: Argument, index: number, array: Argument[]) => U | readonly U[], thisArg?: This) => U[]"}},flat:{defaultValue:null,description:"Returns a new array with all sub-array elements concatenated into it recursively up to the\nspecified depth.\n@param depth The maximum recursion depth",name:"flat",required:!0,type:{name:"<A, D extends number = 1>(this: A, depth?: D) => FlatArray<A, D>[]"}},at:{defaultValue:null,description:"Returns the item located at the specified index.\n@param index The zero-based index of the desired code unit. A negative index will count back from the last item.",name:"at",required:!0,type:{name:"(index: number) => Argument"}},"__@iterator@241":{defaultValue:null,description:"Iterator",name:"__@iterator@241",required:!0,type:{name:"() => IterableIterator<Argument>"}},"__@unscopables@243":{defaultValue:null,description:"Returns an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement.",name:"__@unscopables@243",required:!0,type:{name:"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/multi-tree/src/index.tsx#c"]={docgenInfo:c.__docgenInfo,name:"c",path:"src/components/multi-tree/src/index.tsx#c"})}catch(__react_docgen_typescript_loader_error){}try{MultiTree.displayName="MultiTree",MultiTree.__docgenInfo={description:"",displayName:"MultiTree",props:{className:{defaultValue:null,description:"自定义类名",name:"className",required:!1,type:{name:"string"}},treeList:{defaultValue:null,description:"树形结构数据列表",name:"treeList",required:!0,type:{name:"T[]"}},onToggle:{defaultValue:null,description:"子节点展开状态切换回调函数",name:"onToggle",required:!1,type:{name:'(node: T, direction: "right" | "left") => void'}},fetchChildTree:{defaultValue:null,description:"获取子树数据的异步函数",name:"fetchChildTree",required:!1,type:{name:'(node: T, direction: "right" | "left") => Promise<T[]>'}},cacheMaxAge:{defaultValue:null,description:"缓存最大生存时间（毫秒）",name:"cacheMaxAge",required:!1,type:{name:"number"}},visiableNode:{defaultValue:null,description:"当前可视节点",name:"visiableNode",required:!1,type:{name:"ITreeData"}},height:{defaultValue:null,description:"画布高度",name:"height",required:!1,type:{name:"number"}},width:{defaultValue:null,description:"画布宽度",name:"width",required:!1,type:{name:"number"}},layoutSafeMargin:{defaultValue:null,description:"布局安全边距",name:"layoutSafeMargin",required:!1,type:{name:"number"}},layoutBgColor:{defaultValue:null,description:"布局背景颜色",name:"layoutBgColor",required:!1,type:{name:"string"}},needCache:{defaultValue:null,description:"子节点获取是否需要缓存",name:"needCache",required:!1,type:{name:"boolean"}},cardWidth:{defaultValue:null,description:"卡片宽度",name:"cardWidth",required:!1,type:{name:"number"}},cardWidthSpan:{defaultValue:null,description:"叶子节点左右间隙 应该大于 toggleBtnSpan * 2 + ToggleBtnSize",name:"cardWidthSpan",required:!1,type:{name:"number"}},cardHeightSpan:{defaultValue:null,description:"卡片高度间距 树内部叶子节点上下间隙",name:"cardHeightSpan",required:!1,type:{name:"number"}},treeTopSpan:{defaultValue:null,description:"上下树分支间隙",name:"treeTopSpan",required:!1,type:{name:"number"}},lineColor:{defaultValue:{value:"#4c84ff"},description:"线色",name:"lineColor",required:!1,type:{name:"Color"}},lineSize:{defaultValue:{value:"2"},description:"线宽",name:"lineSize",required:!1,type:{name:"number"}},topBottomLineRadius:{defaultValue:{value:"12"},description:"顶部和底部线条圆角",name:"topBottomLineRadius",required:!1,type:{name:"number"}},toggleBtnSize:{defaultValue:{value:"26"},description:"展开/折叠按钮大小",name:"toggleBtnSize",required:!1,type:{name:"number"}},toggleBtnSpan:{defaultValue:null,description:"节点与按钮间隙",name:"toggleBtnSpan",required:!1,type:{name:"number"}},leftTreePath:{defaultValue:null,description:"左树路径（在T中的key）",name:"leftTreePath",required:!1,type:{name:"string | number | symbol"}},rightTreePath:{defaultValue:null,description:"右树路径（在T中的key）",name:"rightTreePath",required:!1,type:{name:"string | number | symbol"}},leftNumKey:{defaultValue:null,description:"左树子节点数取值key",name:"leftNumKey",required:!1,type:{name:"string | number | symbol"}},rightNumKey:{defaultValue:null,description:"右树子节点数取值key",name:"rightNumKey",required:!1,type:{name:"string | number | symbol"}},leftVirtualNumKey:{defaultValue:null,description:"左树虚拟子节点数取值key",name:"leftVirtualNumKey",required:!1,type:{name:"string | number | symbol"}},rightVirtualNumKey:{defaultValue:null,description:"右树虚拟子节点数取值key",name:"rightVirtualNumKey",required:!1,type:{name:"string | number | symbol"}},openLeftKey:{defaultValue:null,description:"打开/收起左树取值key",name:"openLeftKey",required:!1,type:{name:"string | number | symbol"}},openRightKey:{defaultValue:null,description:"打开/收起右树取值key",name:"openRightKey",required:!1,type:{name:"string | number | symbol"}},virtualNodeKey:{defaultValue:null,description:"标记节点是虚拟节点（与父节点虚线连接）的取值key",name:"virtualNodeKey",required:!1,type:{name:"string | number | symbol"}},renderCard:{defaultValue:null,description:"渲染卡片节点回调函数",name:"renderCard",required:!1,type:{name:"(node: T) => ReactNode"}},cardWrapClassName:{defaultValue:null,description:"卡片包裹容器类名",name:"cardWrapClassName",required:!1,type:{name:"string"}},renderToolbar:{defaultValue:null,description:"渲染工具栏回调函数",name:"renderToolbar",required:!1,type:{name:"(opt: { zoom: number; minZoom: number; maxZoom: number; zoomStep: number; zoomIn: () => number; zoomOut: () => number; goBackCenter: () => void; }) => React.ReactNode"}},toolbarProps:{defaultValue:null,description:"工具栏属性",name:"toolbarProps",required:!1,type:{name:'Omit<MultiTreeToolbarProps<T>, "treeRef">'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/multi-tree/src/index.tsx#MultiTree"]={docgenInfo:MultiTree.__docgenInfo,name:"MultiTree",path:"src/components/multi-tree/src/index.tsx#MultiTree"})}catch(__react_docgen_typescript_loader_error){}const MockDataList=[{id:"10001",label:"tree center 0",openLeft:!1,leftNum:3,leftVirtualNum:0,left:[{id:-101,label:"left top",openLeft:!1,leftNum:0,left:[]},{id:-102,label:"left middle",openLeft:!1,leftNum:0,left:[]},{id:-103,label:"left bottom",openLeft:!1,leftNum:0,left:[]}],openRight:!0,rightNum:2,rightVirtualNum:0,right:[{id:101,label:"right top",openRight:!1,rightNum:0,right:[]},{id:102,label:"right bottom",openRight:!1,rightNum:0,right:[]}],isVirtual:!1},{id:"10002",label:"tree center 1",openLeft:!1,leftNum:2,leftVirtualNum:0,left:[{id:-1001,label:"left top",openLeft:!1,leftNum:2,left:[{id:-2001,label:"left top",openLeft:!1,leftNum:0,left:[]},{id:-2002,label:"left bottom",openLeft:!1,leftNum:0,left:[]}]},{id:-1002,label:"left bottom",openLeft:!1,isVirtual:!1,leftNum:2,left:[{id:-2001,label:"left top",openLeft:!1,leftNum:0,left:[]},{id:-2002,label:"left bottom",openLeft:!1,leftNum:0,left:[]}]}],openRight:!1,rightNum:2,rightVirtualNum:0,right:[{id:1001,label:"right top",openRight:!1,rightNum:0,right:[]},{id:1002,label:"right bottom",openRight:!0,rightNum:0,right:[]}]}];function getMockDataList(){return JSON.parse(JSON.stringify(MockDataList))}const getZeroNineRange=()=>10*Math.random()|0;const index_stories={component:MultiTree,tags:["autodocs"]},heightRange=[40,60,100,150,200],Default={args:{treeList:MockDataList},render:args=>(0,jsx_runtime.jsx)("div",{style:{height:600},children:(0,jsx_runtime.jsx)(MultiTree,{...args})})},RandomNodeHeight={name:"节点高度随机",args:{treeList:getMockDataList(),renderCard:node=>(node._height_||(node._height_=heightRange[Math.floor(getZeroNineRange()/2)]),(0,jsx_runtime.jsxs)("div",{style:{height:node._height_,backgroundColor:"pink",display:"flex",alignItems:"center",justifyContent:"center",border:"1px solid #ddd",borderRadius:4},children:[node.label," (高度: ",node._height_,"px)"]}))},render:args=>(0,jsx_runtime.jsx)("div",{style:{height:600},children:(0,jsx_runtime.jsx)(MultiTree,{...args})})},CustomToolbar={name:"自定义工具栏",args:{treeList:getMockDataList(),toolbarProps:{zoomStep:.1,maxZoom:1.5},renderToolbar:({zoom,minZoom,maxZoom,zoomIn,zoomOut,goBackCenter})=>(0,jsx_runtime.jsxs)("div",{style:{position:"absolute",top:20,right:20,background:"rgba(255,255,255,0.9)",padding:"8px 12px",borderRadius:20,display:"flex",gap:8,alignItems:"center",boxShadow:"0 2px 8px rgba(0,0,0,0.1)"},children:[(0,jsx_runtime.jsx)(tooltip.A,{title:"缩小",children:(0,jsx_runtime.jsx)(es_button.Ay,{color:"default",variant:"text",icon:(0,jsx_runtime.jsx)(icons_ZoomOutOutlined,{}),size:"small",disabled:zoom<=minZoom,onClick:zoomOut})}),(0,jsx_runtime.jsxs)("span",{style:{minWidth:40,textAlign:"center"},children:[Math.round(100*zoom),"%"]}),(0,jsx_runtime.jsx)(tooltip.A,{title:"放大",children:(0,jsx_runtime.jsx)(es_button.Ay,{color:"default",variant:"text",icon:(0,jsx_runtime.jsx)(icons_ZoomInOutlined,{}),size:"small",disabled:zoom>=maxZoom,onClick:zoomIn})}),(0,jsx_runtime.jsx)(tooltip.A,{title:"回到原点",children:(0,jsx_runtime.jsx)(es_button.Ay,{color:"default",variant:"text",icon:(0,jsx_runtime.jsx)(icons_AimOutlined,{}),size:"small",onClick:goBackCenter})})]})},render:args=>(0,jsx_runtime.jsx)("div",{style:{height:600,position:"relative",border:"1px solid #eee"},children:(0,jsx_runtime.jsx)(MultiTree,{...args})})},DarkMode={name:"自定义适配深色",args:{treeList:getMockDataList(),layoutBgColor:"#1a1a1a",lineColor:"#d0d0d0",toggleBtnSize:20,renderCard:node=>(0,jsx_runtime.jsx)("div",{style:{padding:12,background:"#2a2a2a",color:"#eee",border:"1px solid #444",borderRadius:6},children:node.label})},render:args=>(0,jsx_runtime.jsx)("div",{style:{height:600,background:"#121212",padding:20},children:(0,jsx_runtime.jsx)(MultiTree,{...args})})},LazyLoading={name:"子节点懒加载 | 虚线",args:{treeList:getMockDataList(),fetchChildTree:async function fetchChildren(node,direction,injectProps={}){await new Promise(resolve=>setTimeout(resolve,800));const num=node[`${direction}Num`]||0,vNum=node[`${direction}VirtualNum`]||0;return Array(num+vNum||3).fill(0).map((_,i)=>{const isVirtual=getZeroNineRange()>2&&i<vNum;return{id:`${1e6*Math.random()|0}-${direction}-${i}`,label:`${"left"===direction?"左":"右"}分支-${i+1}`,leftNum:Math.floor(getZeroNineRange()/3),rightNum:Math.floor(getZeroNineRange()/3),leftVirtualNum:Math.floor(getZeroNineRange()/4),rightVirtualNum:Math.floor(getZeroNineRange()/4),openLeft:!1,openRight:!1,left:[],right:[],isVirtual,...injectProps}})},renderCard:node=>(node._height_||(node._height_=heightRange[Math.floor(getZeroNineRange()/2)]),node.isVirtual?(0,jsx_runtime.jsxs)("div",{style:{padding:10,border:"1px dashed #888",background:"#f9f9f9",color:"#666",borderRadius:2,height:node._height_},children:[node.label," (虚线节点)"]}):(0,jsx_runtime.jsx)("div",{style:{padding:10,background:"#e6f7ff",border:"1px solid #91d5ff",borderRadius:2,height:node._height_},children:node.label}))},render:args=>(0,jsx_runtime.jsx)("div",{style:{height:600},children:(0,jsx_runtime.jsx)(MultiTree,{...args})})},__namedExportsOrder=["Default","RandomNodeHeight","CustomToolbar","DarkMode","LazyLoading"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    treeList: MockDataList\n  },\n  render(args) {\n    return <div style={{\n      height: 600\n    }}>\n        <MultiTree {...args} />\n      </div>;\n  }\n}",...Default.parameters?.docs?.source}}},RandomNodeHeight.parameters={...RandomNodeHeight.parameters,docs:{...RandomNodeHeight.parameters?.docs,source:{originalSource:'{\n  name: "节点高度随机",\n  args: {\n    treeList: MockDataList1,\n    renderCard(node) {\n      if (!node._height_) {\n        node._height_ = heightRange[Math.floor(getZeroNineRange() / 2)];\n      }\n      return <div style={{\n        height: node._height_,\n        backgroundColor: "pink",\n        display: "flex",\n        alignItems: "center",\n        justifyContent: "center",\n        border: "1px solid #ddd",\n        borderRadius: 4\n      }}>\n          {node.label} (高度: {node._height_}px)\n        </div>;\n    }\n  },\n  render(args) {\n    return <div style={{\n      height: 600\n    }}>\n        <MultiTree {...args} />\n      </div>;\n  }\n}',...RandomNodeHeight.parameters?.docs?.source}}},CustomToolbar.parameters={...CustomToolbar.parameters,docs:{...CustomToolbar.parameters?.docs,source:{originalSource:'{\n  name: "自定义工具栏",\n  args: {\n    treeList: MockDataList4,\n    toolbarProps: {\n      zoomStep: 0.1,\n      maxZoom: 1.5\n    },\n    renderToolbar: ({\n      zoom,\n      minZoom,\n      maxZoom,\n      zoomIn,\n      zoomOut,\n      goBackCenter\n    }) => <div style={{\n      position: "absolute",\n      top: 20,\n      right: 20,\n      background: "rgba(255,255,255,0.9)",\n      padding: "8px 12px",\n      borderRadius: 20,\n      display: "flex",\n      gap: 8,\n      alignItems: "center",\n      boxShadow: "0 2px 8px rgba(0,0,0,0.1)"\n    }}>\n        <ToolTip title={"缩小"}>\n          <Button color="default" variant="text" icon={<ZoomOutOutlined />} size={"small"} disabled={zoom <= minZoom} // TODO: tooltip disabled 后不消失\n        onClick={zoomOut} />\n        </ToolTip>\n        <span style={{\n        minWidth: 40,\n        textAlign: "center"\n      }}>\n          {Math.round(zoom * 100)}%\n        </span>\n        <ToolTip title={"放大"}>\n          <Button color="default" variant="text" icon={<ZoomInOutlined />} size={"small"} disabled={zoom >= maxZoom} onClick={zoomIn} />\n        </ToolTip>\n        <ToolTip title={"回到原点"}>\n          <Button color="default" variant="text" icon={<AimOutlined />} size={"small"} onClick={goBackCenter} />\n        </ToolTip>\n      </div>\n  },\n  render(args) {\n    return <div style={{\n      height: 600,\n      position: "relative",\n      border: "1px solid #eee"\n    }}>\n        <MultiTree {...args} />\n      </div>;\n  }\n}',...CustomToolbar.parameters?.docs?.source}}},DarkMode.parameters={...DarkMode.parameters,docs:{...DarkMode.parameters?.docs,source:{originalSource:'{\n  name: "自定义适配深色",\n  args: {\n    treeList: MockDataList5,\n    layoutBgColor: "#1a1a1a",\n    lineColor: "#d0d0d0",\n    toggleBtnSize: 20,\n    renderCard: node => <div style={{\n      padding: 12,\n      background: "#2a2a2a",\n      color: "#eee",\n      border: "1px solid #444",\n      borderRadius: 6\n    }}>\n        {node.label}\n      </div>\n  },\n  render(args) {\n    return <div style={{\n      height: 600,\n      background: "#121212",\n      padding: 20\n    }}>\n        <MultiTree {...args} />\n      </div>;\n  }\n}',...DarkMode.parameters?.docs?.source}}},LazyLoading.parameters={...LazyLoading.parameters,docs:{...LazyLoading.parameters?.docs,source:{originalSource:'{\n  name: "子节点懒加载 | 虚线",\n  args: {\n    treeList: MockDataList3,\n    fetchChildTree: fetchChildren,\n    renderCard(node) {\n      if (!node._height_) {\n        node._height_ = heightRange[Math.floor(getZeroNineRange() / 2)];\n      }\n      if (node.isVirtual) {\n        return <div style={{\n          padding: 10,\n          border: "1px dashed #888",\n          background: "#f9f9f9",\n          color: "#666",\n          borderRadius: 2,\n          height: node._height_\n        }}>\n            {node.label} (虚线节点)\n          </div>;\n      }\n      return <div style={{\n        padding: 10,\n        background: "#e6f7ff",\n        border: "1px solid #91d5ff",\n        borderRadius: 2,\n        height: node._height_\n      }}>\n          {node.label}\n        </div>;\n    }\n  },\n  render(args) {\n    return <div style={{\n      height: 600\n    }}>\n        <MultiTree {...args} />\n      </div>;\n  }\n}',...LazyLoading.parameters?.docs?.source}}}},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[14].use[1]!./node_modules/postcss-loader/dist/cjs.js!./node_modules/resolve-url-loader/index.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[14].use[4]!./src/components/multi-tree/src/style.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__),_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/css-loader/dist/runtime/getUrl.js"),_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__),___CSS_LOADER_URL_IMPORT_0___=new URL(__webpack_require__("./src/components/multi-tree/src/mini-loading.gif"),__webpack_require__.b),___CSS_LOADER_EXPORT___=_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()),___CSS_LOADER_URL_REPLACEMENT_0___=_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_0___);___CSS_LOADER_EXPORT___.push([module.id,`.ohkit-multi-tree__container{width:100%;height:100%;position:relative}.ohkit-multi-tree__container *{box-sizing:border-box}.ohkit-multi-tree__tree-layout-wrapper{width:100%;height:100%;cursor:grab;overflow:auto;user-select:none}.ohkit-multi-tree__tree-layout-wrapper::-webkit-scrollbar{display:none}.ohkit-multi-tree__tree-layout{transform-origin:center left;position:relative}.ohkit-multi-tree__translate-animate{transition:translateX .2s ease,scale .2s ease}.ohkit-multi-tree__card{position:absolute;z-index:5;will-change:top,left}.ohkit-multi-tree__card .loading-icon{display:none;position:absolute;height:100%;width:100%;border-radius:50%;background-color:#fff;background-image:url(${___CSS_LOADER_URL_REPLACEMENT_0___});background-position:center;background-size:14px;background-repeat:no-repeat}.ohkit-multi-tree__card.loading-left-child-tree .left-loading{display:block}.ohkit-multi-tree__card.loading-right-child-tree .right-loading{display:block}.ohkit-multi-tree__card-content{position:relative}.ohkit-multi-tree__toggle-btn{z-index:5;position:absolute;top:0;transform:translateY(-50%);display:flex;align-items:center;justify-content:center;text-align:center;border:2px solid rgba(0,0,0,0);border-radius:50%;cursor:pointer;font-size:14px;color:#848fa7;background-color:#fff}.ohkit-multi-tree__toggle-btn:hover{color:#4c84ff;box-shadow:0 1px 14px rgba(31,35,41,.2)}.ohkit-multi-tree__toggle-btn.has-virtual{border-color:#f27c49}.ohkit-multi-tree__toggle-btn .icon-fold{width:8px;height:2px;border-radius:1px;background-color:#8490a7}.ohkit-multi-tree__d-card{position:relative;z-index:5;background-color:#cfd5df}.ohkit-multi-tree__short-line{position:absolute;z-index:4;will-change:top;top:0}.ohkit-multi-tree__short-line.dashed-line{border-top-style:dashed}.ohkit-multi-tree__horizontal-line{position:absolute;z-index:4;will-change:top}.ohkit-multi-tree__horizontal-line-right.dashed-line{border-right-style:dashed}.ohkit-multi-tree__horizontal-line-left.dashed-line{border-left-style:dashed}.ohkit-multi-tree__horizontal-line.middle-line{top:50%}.ohkit-multi-tree__horizontal-line.middle-line.dashed-line{border-top-style:dashed}.ohkit-multi-tree__horizontal-line.top-line{will-change:height}.ohkit-multi-tree__horizontal-line.top-line.dashed-line{border-top-style:dashed}.ohkit-multi-tree__horizontal-line.bottom-line{will-change:height}.ohkit-multi-tree__horizontal-line.bottom-line.dashed-line{border-bottom-style:dashed}.ohkit-multi-tree__vertical-line{position:absolute;border-left-style:solid;z-index:2}.ohkit-multi-tree__vertical-line-dashed{position:absolute;border-left-style:dashed;z-index:1;transform:translateY(-50%)}.ohkit-multi-tree__btn-line-wrapper{position:absolute}.ohkit-multi-tree__top-bottom-line-mask{position:absolute;z-index:3;will-change:height}`,"",{version:3,sources:["webpack://./src/components/multi-tree/src/style.scss"],names:[],mappings:"AAWI,6BACI,UAAA,CACA,WAAA,CACA,iBAAA,CACA,+BACE,qBAAA,CAIN,uCACI,UAAA,CACA,WAAA,CACA,WAAA,CACA,aAAA,CACA,gBAAA,CACA,0DACI,YAAA,CAIR,+BACI,4BAAA,CACA,iBAAA,CAGJ,qCACI,6CAAA,CAGJ,wBACI,iBAAA,CACA,SAAA,CACA,oBAAA,CAEA,sCACI,YAAA,CACA,iBAAA,CACA,WAAA,CACA,UAAA,CACA,iBAAA,CACA,qBAAA,CACA,wDAAA,CACA,0BAAA,CACA,oBAAA,CACA,2BAAA,CAIA,8DACI,aAAA,CAKJ,gEACI,aAAA,CAKZ,gCACI,iBAAA,CAGJ,8BACI,SAvEa,CAwEb,iBAAA,CACA,KAAA,CACA,0BAAA,CACA,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,iBAAA,CACA,8BAAA,CACA,iBAAA,CACA,cAAA,CACA,cAAA,CACA,aAAA,CACA,qBAAA,CAEA,oCACI,aArFI,CAsFJ,uCAAA,CAGJ,0CACI,oBAAA,CAGJ,yCACI,SAAA,CACA,UAAA,CACA,iBAAA,CACA,wBAAA,CAIR,0BACI,iBAAA,CACA,SAAA,CACA,wBAAA,CASJ,8BALI,iBAAA,CACA,SAhHS,CAiHT,eAAA,CAKA,KAAA,CAEA,0CACI,uBAAA,CAIR,mCAdI,iBAAA,CACA,SAhHS,CAiHT,eAAA,CAgBI,qDACI,yBAAA,CAKJ,oDACI,wBAAA,CAIR,+CACI,OAAA,CACA,2DACI,uBAAA,CAIR,4CACI,kBAAA,CACA,wDACI,uBAAA,CAIR,+CACI,kBAAA,CACA,2DACI,0BAAA,CASZ,iCAHI,iBAAA,CAKA,uBAAA,CACA,SA3KS,CA8Kb,wCATI,iBAAA,CAWA,wBAAA,CACA,SAlLgB,CAmLhB,0BAAA,CAGJ,oCACI,iBAAA,CAGJ,wCACI,iBAAA,CACA,SA1LY,CA2LZ,kBAAA",sourcesContent:["$prefix: ohkit;\n$dashed-v-line-z-index: 1;\n$v-line-z-index: 2;\n$line-mask-z-index: 3;\n$h-line-z-index: 4;\n$toggle-btn-z-index: 5;\n$toggle-border-width: 2px;\n$primary-color: #4c84ff;\n\n.#{$prefix}-multi-tree__ {\n    // main multi tree region\n    &container {\n        width: 100%;\n        height: 100%;\n        position: relative;\n        * {\n          box-sizing: border-box;\n        }\n    }\n    \n    &tree-layout-wrapper {\n        width: 100%;\n        height: 100%;\n        cursor: grab;\n        overflow: auto;\n        user-select: none; // 避免划选行为和画布拖拽行为冲突（划选至滚动区边缘区时，会触发滚动行为）\n        &::-webkit-scrollbar {\n            display: none;\n        }\n    }\n    \n    &tree-layout {\n        transform-origin: center left;\n        position: relative;\n    }\n    \n    &translate-animate {\n        transition: translateX 0.2s ease, scale 0.2s ease;\n    }\n    \n    &card {\n        position: absolute;\n        z-index: $h-line-z-index + 1;\n        will-change: top, left;\n\n        .loading-icon {\n            display: none;\n            position: absolute;\n            height: 100%;\n            width: 100%;\n            border-radius: 50%;\n            background-color: #fff;\n            background-image: url('./mini-loading.gif');\n            background-position: center;\n            background-size: 14px;\n            background-repeat: no-repeat;\n        }\n        \n        &.loading-left-child-tree {\n            .left-loading {\n                display: block;\n            }\n        }\n        \n        &.loading-right-child-tree {\n            .right-loading {\n                display: block;\n            }\n        }\n    }\n    \n    &card-content {\n        position: relative;\n    }\n    \n    &toggle-btn {\n        z-index: $toggle-btn-z-index;\n        position: absolute;\n        top: 0;\n        transform: translateY(-50%);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        text-align: center;\n        border: $toggle-border-width solid transparent;\n        border-radius: 50%;\n        cursor: pointer;\n        font-size: 14px;\n        color: #848fa7;\n        background-color: #fff;\n        \n        &:hover {\n            color: $primary-color;\n            box-shadow: 0 1px 14px rgba(31, 35, 41, 0.2);\n        }\n        \n        &.has-virtual {\n            border-color: #f27c49;\n        }\n        \n        .icon-fold {\n            width: 8px;\n            height: 2px;\n            border-radius: 1px;\n            background-color: #8490a7;\n        }\n    }\n\n    &d-card {\n        position: relative;\n        z-index: $h-line-z-index + 1;\n        background-color: #cfd5df;\n    }\n\n    @mixin h-line-css {\n        position: absolute;\n        z-index: $h-line-z-index;\n        will-change: top;\n    }\n    \n    &short-line {\n        @include h-line-css;\n        top: 0;\n        \n        &.dashed-line {\n            border-top-style: dashed;\n        }\n    }\n    \n    &horizontal-line {\n        @include h-line-css;\n        \n        &-right {\n            &.dashed-line {\n                border-right-style: dashed;\n            }\n        }\n\n        &-left {\n            &.dashed-line {\n                border-left-style: dashed;\n            }\n        }\n\n        &.middle-line {\n            top: 50%;\n            &.dashed-line {\n                border-top-style: dashed;\n            }\n        }\n\n        &.top-line {\n            will-change: height;\n            &.dashed-line {\n                border-top-style: dashed;\n            }\n        }\n\n        &.bottom-line {\n            will-change: height;\n            &.dashed-line {\n                border-bottom-style: dashed;\n            }\n        }\n    }\n\n    @mixin v-line-css {\n        position: absolute;\n    }\n    \n    &vertical-line {\n        @include v-line-css;\n        border-left-style: solid;\n        z-index: $v-line-z-index;\n    }\n    \n    &vertical-line-dashed {\n        @include v-line-css;\n        border-left-style: dashed;\n        z-index: $dashed-v-line-z-index;\n        transform: translateY(-50%);\n    }\n\n    &btn-line-wrapper {\n        position: absolute;\n    }\n\n    &top-bottom-line-mask {\n        position: absolute;\n        z-index: $line-mask-z-index;\n        will-change: height;\n    }\n}"],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[14].use[1]!./node_modules/postcss-loader/dist/cjs.js!./node_modules/resolve-url-loader/index.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[14].use[4]!./src/components/multi-tree/src/toolbar/style.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".ohkit-multi-tree__toolbar-container{position:absolute;z-index:5;left:24px;bottom:20px;color:#333;font-size:14px;padding:0 12px 0 10px;box-shadow:1px 2px 8px 0 rgba(225,229,231,.6);border-radius:22px;background-color:#fff}.ohkit-multi-tree__toolbar-control{display:flex;align-items:center;justify-content:space-around;padding:4px 0}.ohkit-multi-tree__zoom-control{padding:4px 8px;border:1px solid #ddd;border-radius:4px;background-color:rgba(0,0,0,0)}.ohkit-multi-tree__zoom-size{width:60px;padding:10px 0;display:flex;align-items:center;justify-content:center}.ohkit-multi-tree__sep{width:1px;height:16px;background-color:#e1e5e7;margin-left:10px;margin-right:12px}","",{version:3,sources:["webpack://./src/components/multi-tree/src/toolbar/style.scss"],names:[],mappings:"AAII,qCACI,iBAAA,CACA,SAAA,CACA,SAAA,CACA,WAAA,CACA,UAAA,CACA,cAAA,CACA,qBAAA,CACA,6CAAA,CACA,kBAAA,CACA,qBAAA,CAGJ,mCACI,YAAA,CACA,kBAAA,CACA,4BAAA,CACA,aAAA,CAGJ,gCACI,eAAA,CACA,qBAAA,CACA,iBAAA,CACA,8BAAA,CAGJ,6BACI,UAAA,CACA,cAAA,CACA,YAAA,CACA,kBAAA,CACA,sBAAA,CAGJ,uBACI,SAAA,CACA,WAAA,CACA,wBAAA,CACA,gBAAA,CACA,iBAAA",sourcesContent:["$prefix: ohkit;\n\n.#{$prefix}-multi-tree__ {\n    // Toolbar region\n    &toolbar-container {\n        position: absolute;\n        z-index: 5;\n        left: 24px;\n        bottom: 20px;\n        color: #333;\n        font-size: 14px;\n        padding: 0 12px 0 10px;\n        box-shadow: 1px 2px 8px 0 rgba(225, 229, 231, 0.6);\n        border-radius: 22px;\n        background-color: #fff;\n    }\n    \n    &toolbar-control {\n        display: flex;\n        align-items: center;\n        justify-content: space-around;\n        padding: 4px 0;\n    }\n\n    &zoom-control {\n        padding: 4px 8px;\n        border: 1px solid #ddd;\n        border-radius: 4px;\n        background-color: transparent;\n    }\n\n    &zoom-size {\n        width: 60px;\n        padding: 10px 0;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n\n    &sep {\n        width: 1px;\n        height: 16px;\n        background-color: #e1e5e7;\n        margin-left: 10px;\n        margin-right: 12px;\n    }\n}"],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/runtime/getUrl.js":module=>{"use strict";module.exports=function(url,options){return options||(options={}),url?(url=String(url.__esModule?url.default:url),/^['"].*['"]$/.test(url)&&(url=url.slice(1,-1)),options.hash&&(url+=options.hash),/["'() \t\n]|(%20)/.test(url)||options.needQuotes?'"'.concat(url.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):url):url}},"./src/components/multi-tree/node_modules/@moyuyc/visit-tree/castArray.js":(module,__unused_webpack_exports,__webpack_require__)=>{const isIterable=__webpack_require__("./src/components/multi-tree/node_modules/is-iterable/index.js"),collListTypes=[__webpack_require__.g.HTMLCollection,__webpack_require__.g.NodeList].filter(x=>"function"==typeof x);module.exports=function(input){return input&&"function"==typeof input.slice?input:isIterable(input)||collListTypes.find(type=>input instanceof type)?[].slice.apply(input):[input]}},"./src/components/multi-tree/node_modules/@moyuyc/visit-tree/context.js":module=>{module.exports=class VisitContext{constructor(props,opts){this.opts=Object.assign({path:"children"},opts),this.assign({index:0,depth:1,parent:null,node:null,status:null,parentCtx:null},props,{state:{}})}assign(...props){Object.assign(this,...props)}get children(){return this.node&&this.node[this.opts.path]}get globalState(){return this.opts.state}set globalState(val){this.opts.state=val}skip(){this.status="skip"}break(){this.status="break"}continue(){this.status=null}insertByIndex(index,nodes){if(this.parent)return this.parent[this.opts.path].splice(index,0,...nodes),!0}insertBefore(...nodes){return this.insertByIndex(this.index,nodes)}insert(...nodes){return this.insertByIndex(this.index+1,nodes)}remove(){if(this.parent){let removed;return removed="function"==typeof this.parent[this.opts.path].splice?!!this.parent[this.opts.path].splice(this.index,1).length:delete this.parent[this.opts.path],removed&&this.index--,removed}}replace(node){if(this.remove())return this.index++,this.parent[this.opts.path]&&"function"==typeof this.parent[this.opts.path].splice?this.insertBefore(node):(this.parent[this.opts.path]=node,!0)}}},"./src/components/multi-tree/node_modules/@moyuyc/visit-tree/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{const castArray=__webpack_require__("./src/components/multi-tree/node_modules/@moyuyc/visit-tree/castArray.js"),Context=__webpack_require__("./src/components/multi-tree/node_modules/@moyuyc/visit-tree/context.js");function walkParentCtx(ctx,walk){for(;ctx;)walk(ctx),ctx=ctx.parentCtx}function getPaths(srcCtx){const paths=[];return walkParentCtx(srcCtx,ctx=>{ctx.parent&&paths.unshift(ctx.index)}),paths}function getParents(srcCtx){const parents=[];return walkParentCtx(srcCtx,ctx=>{ctx.parent&&parents.unshift(ctx.parent)}),parents}async function walkNodeInner(node,preWalk,postWalk,ctx,options={}){const{path="children",state}=options;if(ctx=new Context(Object.assign({index:0,depth:1,status:null,parent:null,parentCtx:null},ctx,{node}),options),!node)return{ctx,status:null};if(ctx.paths?ctx.paths=ctx.paths.concat(ctx.index):ctx.paths=getPaths(ctx),ctx.parents?ctx.parents=ctx.parents.concat(ctx.parent):ctx.parents=getParents(ctx),await preWalk(node,ctx),ctx.status)return{ctx,status:ctx.status};const nodes=[].slice.apply(castArray(ctx.children||[]));let i=0;for(;nodes.length;){const childNode=nodes.shift();let result=await walkNodeInner(childNode,preWalk,postWalk,{...ctx,index:i,parent:node,parentCtx:ctx,depth:ctx.depth+1},options);if("break"===result.status)return{ctx,status:result.status};i=result.ctx.index,i++}return await postWalk(node,ctx),ctx.status?{ctx,status:ctx.status}:{ctx,status:null}}function walkNodeInnerSync(node,preWalk,postWalk,ctx,options={}){const{path="children",state}=options;if(ctx=new Context(Object.assign({index:0,depth:1,status:null,parent:null,parentCtx:null},ctx,{node}),options),!node)return{ctx,status:null};if(ctx.paths?ctx.paths=ctx.paths.concat(ctx.index):ctx.paths=getPaths(ctx),ctx.parents?ctx.parents=ctx.parents.concat(ctx.parent):ctx.parents=getParents(ctx),preWalk(node,ctx),ctx.status)return{ctx,status:ctx.status};const nodes=[].slice.apply(castArray(ctx.children||[]));let i=0;for(;nodes.length;){let result=walkNodeInnerSync(nodes.shift(),preWalk,postWalk,{...ctx,index:i,parent:node,parentCtx:ctx,depth:ctx.depth+1},options);if("break"===result.status)return{ctx,status:result.status};i=result.ctx.index,i++}return postWalk(node,ctx),ctx.status?{ctx,status:ctx.status}:{ctx,status:null}}const noop=()=>{};async function walkTree(node,preWalk,postWalk,options){"function"!=typeof postWalk&&(options=postWalk,postWalk=noop),await walkNodeInner(node,preWalk||noop,postWalk||noop,null,options)}module.exports=walkTree,module.exports.default=walkTree,module.exports.sync=function walkTreeSync(node,preWalk,postWalk,options){"function"!=typeof postWalk&&(options=postWalk,postWalk=noop),walkNodeInnerSync(node,preWalk||noop,postWalk||noop,null,options)},module.exports.walkParentCtx=walkParentCtx,module.exports.Context=Context,module.exports.getParents=getParents,module.exports.getPaths=getPaths},"./src/components/multi-tree/node_modules/is-iterable/index.js":module=>{"use strict";module.exports=function(val){return"undefined"!=typeof Symbol&&Symbol&&"iterator"in Symbol&&null!=val&&"function"==typeof val[Symbol.iterator]}},"./src/components/multi-tree/src/mini-loading.gif":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/mini-loading.7f9d339c.gif"}}]);