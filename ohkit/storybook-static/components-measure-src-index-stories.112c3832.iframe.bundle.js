"use strict";(self.webpackChunk_ohkit_site=self.webpackChunk_ohkit_site||[]).push([[742],{"./src/components/measure/src/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Bounds:()=>Bounds,Client:()=>Client,Default:()=>Default,Margin:()=>Margin,Offset:()=>Offset,Position:()=>Position,Scroll:()=>Scroll,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),_data__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/measure/src/data.js");const __WEBPACK_DEFAULT_EXPORT__={component:__webpack_require__("./src/components/measure/src/index.tsx").t$,tags:["autodocs"]},Default={args:{client:!0,offset:!0,bounds:!0,children:({measureRef,contentRect})=>{const{client,offset,bounds}=contentRect,{width,height,top,left}=client||{},{width:offsetWidth,height:offsetHeight,top:offsetTop,left:offsetLeft}=offset||{},{width:boundsWidth,height:boundsHeight,top:boundsTop,left:boundsLeft,right,bottom}=bounds||{};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{children:"调整窗口大小查看效果："}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{ref:measureRef,style:{backgroundColor:"red"},children:_data__WEBPACK_IMPORTED_MODULE_3__.Q}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:`client size  =>  width: ${width}px, height: ${height}px, top: ${top}px, left: ${left}px`}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:`offset size  =>  width: ${offsetWidth}px, height: ${offsetHeight}px, top: ${offsetTop}px, left: ${offsetLeft}px`}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:`bounds size  =>  width: ${boundsWidth}px, height: ${boundsHeight}px, top: ${boundsTop}px, left: ${boundsLeft}px, right: ${right}px bottom: ${bottom}px`})]})}}},Client={args:{client:!0,children:({measureRef,contentRect})=>{const{client}=contentRect,{width,height,top,left}=client||{};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{children:"调整窗口大小查看效果："}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{ref:measureRef,style:{backgroundColor:"red"},children:_data__WEBPACK_IMPORTED_MODULE_3__.Q}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:`client size  =>  width: ${width}px, height: ${height}px, top: ${top}px, left: ${left}px`})]})}}},Offset={args:{offset:!0,children({measureRef,contentRect}){const{offset}=contentRect,{width,height,top,left}=offset||{};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{children:"调整窗口大小查看效果："}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{ref:measureRef,style:{backgroundColor:"blue"},children:_data__WEBPACK_IMPORTED_MODULE_3__.Q}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:`offset size  =>  width: ${width}px, height: ${height}px, top: ${top}px, left: ${left}px`})]})}}},Bounds={args:{bounds:!0,children({measureRef,contentRect}){const{bounds}=contentRect,{width,height,top,left,right,bottom}=bounds||{};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{children:"调整窗口大小查看效果："}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{ref:measureRef,style:{backgroundColor:"yellow"},children:_data__WEBPACK_IMPORTED_MODULE_3__.Q}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:`bounds size  =>  width: ${width}px, height: ${height}px, top: ${top}px, left: ${left}px, right: ${right}px bottom: ${bottom}px`})]})}}},Scroll={args:{scroll:!0,children({measureRef,contentRect}){const{scroll}=contentRect,{width,height,top,left}=scroll||{};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{children:"调整窗口大小及滚动条查看效果："}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{ref:measureRef,style:{backgroundColor:"purple",maxHeight:"100px",maxWidth:"80%",overflow:"auto"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{minWidth:"400px"},children:_data__WEBPACK_IMPORTED_MODULE_3__.Q})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:`scroll size  =>  width: ${width}px, height: ${height}px, top: ${top}px, left: ${left}px`})]})}}},Position={args:{position:!0,children({measureRef,contentRect}){const{position}=contentRect,{top,left,right,bottom}=position||{};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{children:"调整窗口大小至出现滚动条并滚动页面查看效果："}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{ref:measureRef,style:{backgroundColor:"purple",maxHeight:"100px",maxWidth:"80%",overflow:"auto"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{minWidth:"400px"},children:_data__WEBPACK_IMPORTED_MODULE_3__.Q})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:`scroll size  =>  top: ${top}px, left: ${left}px, bottom: ${bottom}px, right: ${right}px`})]})}}},Margin={args:{margin:!0,children({measureRef,contentRect}){const{margin}=contentRect,{top,left,bottom,right}=margin||{},[marginCss,setMarginCss]=react__WEBPACK_IMPORTED_MODULE_1__.useState("10px 20px");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{children:"点击按钮查看效果："}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("button",{onClick:()=>{setMarginCss("15px 30px"===marginCss?"10px 20px":"15px 30px")},children:"margin 切换"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{ref:measureRef,style:{backgroundColor:"pink",margin:marginCss},children:_data__WEBPACK_IMPORTED_MODULE_3__.Q}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:`margin size  => top: ${top}px, left: ${left}px, bottom: ${bottom}px, right: ${right}px`})]})}}},__namedExportsOrder=["Default","Client","Offset","Bounds","Scroll","Position","Margin"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    client: true,\n    offset: true,\n    bounds: true,\n    children: ({\n      measureRef,\n      contentRect\n    }) => {\n      // console.log(contentRect);\n      const {\n        client,\n        offset,\n        bounds\n      } = contentRect;\n      const {\n        width,\n        height,\n        top,\n        left\n      } = client || {};\n      const {\n        width: offsetWidth,\n        height: offsetHeight,\n        top: offsetTop,\n        left: offsetLeft\n      } = offset || {};\n      const {\n        width: boundsWidth,\n        height: boundsHeight,\n        top: boundsTop,\n        left: boundsLeft,\n        right,\n        bottom\n      } = bounds || {};\n      return <div>\n          <h3>{'调整窗口大小查看效果：'}</h3>\n          <div ref={measureRef} style={{\n          backgroundColor: 'red'\n        }}>{text}</div>\n          <div>{`client size  =>  width: ${width}px, height: ${height}px, top: ${top}px, left: ${left}px`}</div>\n          <div>{`offset size  =>  width: ${offsetWidth}px, height: ${offsetHeight}px, top: ${offsetTop}px, left: ${offsetLeft}px`}</div>\n          <div>{`bounds size  =>  width: ${boundsWidth}px, height: ${boundsHeight}px, top: ${boundsTop}px, left: ${boundsLeft}px, right: ${right}px bottom: ${bottom}px`}</div>\n        </div>;\n    }\n  }\n}",...Default.parameters?.docs?.source}}},Client.parameters={...Client.parameters,docs:{...Client.parameters?.docs,source:{originalSource:"{\n  args: {\n    client: true,\n    children: ({\n      measureRef,\n      contentRect\n    }) => {\n      // console.log(contentRect);\n      const {\n        client\n      } = contentRect;\n      const {\n        width,\n        height,\n        top,\n        left\n      } = client || {};\n      return <div>\n          <h3>{'调整窗口大小查看效果：'}</h3>\n          <div ref={measureRef} style={{\n          backgroundColor: 'red'\n        }}>{text}</div>\n          <div>{`client size  =>  width: ${width}px, height: ${height}px, top: ${top}px, left: ${left}px`}</div>\n        </div>;\n    }\n  }\n}",...Client.parameters?.docs?.source}}},Offset.parameters={...Offset.parameters,docs:{...Offset.parameters?.docs,source:{originalSource:"{\n  args: {\n    offset: true,\n    children({\n      measureRef,\n      contentRect\n    }) {\n      // console.log(contentRect);\n      const {\n        offset\n      } = contentRect;\n      const {\n        width,\n        height,\n        top,\n        left\n      } = offset || {};\n      return <div>\n          <h3>{'调整窗口大小查看效果：'}</h3>\n          <div ref={measureRef} style={{\n          backgroundColor: 'blue'\n        }}>{text}</div>\n          <div>{`offset size  =>  width: ${width}px, height: ${height}px, top: ${top}px, left: ${left}px`}</div>\n        </div>;\n    }\n  }\n}",...Offset.parameters?.docs?.source}}},Bounds.parameters={...Bounds.parameters,docs:{...Bounds.parameters?.docs,source:{originalSource:'{\n  args: {\n    bounds: true,\n    children({\n      measureRef,\n      contentRect\n    }) {\n      // console.log(contentRect);\n      const {\n        bounds\n      } = contentRect;\n      const {\n        width,\n        height,\n        top,\n        left,\n        right,\n        bottom\n      } = bounds || {};\n      return <div>\n          <h3>{"调整窗口大小查看效果："}</h3>\n          <div ref={measureRef} style={{\n          backgroundColor: "yellow"\n        }}>\n            {text}\n          </div>\n          <div>{`bounds size  =>  width: ${width}px, height: ${height}px, top: ${top}px, left: ${left}px, right: ${right}px bottom: ${bottom}px`}</div>\n        </div>;\n    }\n  }\n}',...Bounds.parameters?.docs?.source}}},Scroll.parameters={...Scroll.parameters,docs:{...Scroll.parameters?.docs,source:{originalSource:'{\n  args: {\n    scroll: true,\n    children({\n      measureRef,\n      contentRect\n    }) {\n      // console.log(contentRect);\n      const {\n        scroll\n      } = contentRect;\n      const {\n        width,\n        height,\n        top,\n        left\n      } = scroll || {};\n      return <div>\n          <h3>{"调整窗口大小及滚动条查看效果："}</h3>\n          <div ref={measureRef} style={{\n          backgroundColor: "purple",\n          maxHeight: "100px",\n          maxWidth: "80%",\n          overflow: "auto"\n        }}>\n            <div style={{\n            minWidth: "400px"\n          }}>{text}</div>\n          </div>\n          <div>{`scroll size  =>  width: ${width}px, height: ${height}px, top: ${top}px, left: ${left}px`}</div>\n        </div>;\n    }\n  }\n}',...Scroll.parameters?.docs?.source}}},Position.parameters={...Position.parameters,docs:{...Position.parameters?.docs,source:{originalSource:'{\n  args: {\n    position: true,\n    children({\n      measureRef,\n      contentRect\n    }) {\n      // console.log(contentRect);\n      const {\n        position\n      } = contentRect;\n      const {\n        top,\n        left,\n        right,\n        bottom\n      } = position || {};\n      return <div>\n          <h3>{"调整窗口大小至出现滚动条并滚动页面查看效果："}</h3>\n          <div ref={measureRef} style={{\n          backgroundColor: "purple",\n          maxHeight: "100px",\n          maxWidth: "80%",\n          overflow: "auto"\n        }}>\n            <div style={{\n            minWidth: "400px"\n          }}>{text}</div>\n          </div>\n          <div>{`scroll size  =>  top: ${top}px, left: ${left}px, bottom: ${bottom}px, right: ${right}px`}</div>\n        </div>;\n    }\n  }\n}',...Position.parameters?.docs?.source}}},Margin.parameters={...Margin.parameters,docs:{...Margin.parameters?.docs,source:{originalSource:'{\n  args: {\n    margin: true,\n    children({\n      measureRef,\n      contentRect\n    }) {\n      // console.log(contentRect);\n      const {\n        margin\n      } = contentRect;\n      const {\n        top,\n        left,\n        bottom,\n        right\n      } = margin || {};\n      const marginCss1 = "10px 20px";\n      const marginCss2 = "15px 30px";\n      const [marginCss, setMarginCss] = React.useState(marginCss1);\n      return <div>\n          <h3>{"点击按钮查看效果："}</h3>\n          <button onClick={() => {\n          setMarginCss(marginCss === marginCss2 ? marginCss1 : marginCss2);\n        }}>\n            margin 切换\n          </button>\n          <div ref={measureRef} style={{\n          backgroundColor: "pink",\n          margin: marginCss\n        }}>\n            {text}\n          </div>\n          <div>{`margin size  => top: ${top}px, left: ${left}px, bottom: ${bottom}px, right: ${right}px`}</div>\n        </div>;\n    }\n  }\n}',...Margin.parameters?.docs?.source},description:{story:"margin 变化监听",...Margin.parameters?.docs?.description}}};try{Margin.displayName="Margin",Margin.__docgenInfo={description:"margin 变化监听",displayName:"Margin",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/measure/src/index.stories.tsx#Margin"]={docgenInfo:Margin.__docgenInfo,name:"Margin",path:"src/components/measure/src/index.stories.tsx#Margin"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/measure/src/data.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Q:()=>text,j:()=>codeDemo});const text="测试文本也可以是reactDom测试文本也可以是reactDom测试文本也可以是reactDom\n测试文本也可以是reactDom测试文本也可以是reactDom测试文本也可以是reactDom\n测试文本也可以是reactDom测试文本也可以是reactDom测试文本也可以是reactDom\n测试文本也可以是reactDom测试文本也可以是reactDom测试文本也可以是reactDom",codeDemo='<Measure client>\n  {({ measureRef, contentRect }) => {\n    return (\n      <div ref={measureRef} style={{ backgroundColor: "antiquewhite" }}>\n        width: {contentRect.client?.width} - height: {contentRect.client?.height}\n      </div>\n    );\n  }}\n</Measure>\n'},"./src/components/measure/src/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{t$:()=>measure_Measure});var react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),throttle=__webpack_require__("./src/components/measure/node_modules/lodash-es/throttle.js"),pick=__webpack_require__("./src/components/measure/node_modules/lodash-es/pick.js"),isEqualWith=__webpack_require__("./src/components/measure/node_modules/lodash-es/isEqualWith.js"),ResizeObserver_es=__webpack_require__("./src/components/measure/node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js");function getContentRect(node,props={}){const calculations={};if(props.client&&(calculations.client={top:node.clientTop,left:node.clientLeft,width:node.clientWidth,height:node.clientHeight}),props.offset&&(calculations.offset={top:node.offsetTop,left:node.offsetLeft,width:node.offsetWidth,height:node.offsetHeight},Array.isArray(props.offset)&&(calculations.offset=(0,pick.A)(calculations.offset,props.offset))),props.scroll&&(calculations.scroll={top:node.scrollTop,left:node.scrollLeft,width:node.scrollWidth,height:node.scrollHeight}),props.bounds){const rect=node.getBoundingClientRect();calculations.bounds={top:rect.top,right:rect.right,bottom:rect.bottom,left:rect.left,width:rect.width,height:rect.height}}if(props.position){const rect=node.getBoundingClientRect();calculations.position={top:rect.top,right:rect.right,bottom:rect.bottom,left:rect.left},Array.isArray(props.position)&&(calculations.position=(0,pick.A)(calculations.position,props.position))}if(props.margin){const styles=getComputedStyle(node);calculations.margin={top:styles?parseInt(styles.marginTop,10):0,right:styles?parseInt(styles.marginRight,10):0,bottom:styles?parseInt(styles.marginBottom,10):0,left:styles?parseInt(styles.marginLeft,10):0}}return calculations}const measure_Measure=function with_content_rect_withContentRect(types){return WrappedComponent=>{class WithContentRect extends react.Component{componentDidMount(){this._resizeObserver=new ResizeObserver_es.A(this.measure),null!==this._node&&(this._resizeObserver.observe(this._node),"function"==typeof this.props.onResize&&this.props.onResize(getContentRect(this._node,types||this.props)))}componentWillUnmount(){null!==this._resizeObserver&&(this._resizeObserver.disconnect(),this._resizeObserver=null),this._removeScrollEvent&&this._removeScrollEvent(),this._animationFrameID&&window.cancelAnimationFrame(this._animationFrameID)}handlePosition(){if(this._node&&(this.props.position||this.props.scroll)){const scrollContainer=function findScrollContainer(element,{includeSelf=!1}={}){if(!element)return;let parent=includeSelf?element:element.parentElement;for(;parent;){const{overflow}=window.getComputedStyle(parent);if(overflow.split(" ").every(o=>"auto"===o||"scroll"===o))return parent;parent=parent.parentElement}return document}(this._node,{includeSelf:this.props.scroll});this.bindScrollEvent(scrollContainer)}}bindScrollEvent(scrollContainer){this._removeScrollEvent&&this._removeScrollEvent(),this._removeScrollEvent=function addEvent(target,type,listener,options){return target?(target.addEventListener(type,listener,options),()=>{target.removeEventListener(type,listener,options)}):()=>{}}(scrollContainer,"scroll",()=>{this.measure()},{})}render(){const{innerRef,onResize,...props}=this.props;return(0,react.createElement)(WrappedComponent,{...props,measureRef:this._handleRef,measure:this.measure,contentRect:this.state.contentRect})}constructor(...args){super(...args),this.state={contentRect:{entry:{},client:{},offset:{},scroll:{},bounds:{},position:{},margin:{}}},this._animationFrameID=null,this._removeScrollEvent=null,this._resizeObserver=null,this._node=null,this.measure=(0,throttle.A)(entries=>{if(!this._node)return;const contentRect=getContentRect(this._node,types||this.props);entries&&(contentRect.entry=entries[0].contentRect,contentRect.entry=(0,pick.A)(contentRect.entry,["top","bottom","left","right","width","height","x","y"])),this._animationFrameID=window.requestAnimationFrame(()=>{null!==this._resizeObserver&&((0,isEqualWith.A)(this.state.contentRect,contentRect)||(this.setState({contentRect}),"function"==typeof this.props.onResize&&this.props.onResize(contentRect)))})},this.props.throttleMs),this._handleRef=node=>{null!==this._resizeObserver&&null!==this._node&&this._resizeObserver.unobserve(this._node),this._node=node,this.handlePosition(),null!==this._resizeObserver&&null!==this._node&&this._resizeObserver.observe(this._node);const{innerRef}=this.props;innerRef&&("function"==typeof innerRef?innerRef(this._node):innerRef.current=this._node)}}}return WithContentRect.defaultProps={throttleMs:200},WithContentRect}}()(props=>{const{measure,measureRef,contentRect,children}=props;return(null==children?void 0:children({measure,measureRef,contentRect}))||null});Object.assign(measure_Measure,{displayName:"Measure"});try{measure_Measure.displayName="Measure",measure_Measure.__docgenInfo={description:"Measure 组件是一个高阶组件，用于测量并获取子元素的内容区域尺寸信息。\n它通过 withContentRect 高阶组件封装，将测量相关的属性和方法注入到子组件中。",displayName:"Measure",props:{innerRef:{defaultValue:null,description:"",name:"innerRef",required:!1,type:{name:"{ current: HTMLElement; } | ((instance: HTMLElement) => void)"}},onResize:{defaultValue:null,description:"",name:"onResize",required:!1,type:{name:"(contentRect: IContentRect) => void"}},throttleMs:{defaultValue:{value:"200"},description:"throttleMs ms 内只触发一次 resize 事件，防止高频触发 resize 事件导致性能问题",name:"throttleMs",required:!1,type:{name:"number"}},client:{defaultValue:null,description:"",name:"client",required:!1,type:{name:"boolean"}},offset:{defaultValue:null,description:"",name:"offset",required:!1,type:{name:"boolean | Direction[]"}},scroll:{defaultValue:null,description:"",name:"scroll",required:!1,type:{name:"boolean"}},bounds:{defaultValue:null,description:"",name:"bounds",required:!1,type:{name:"boolean"}},margin:{defaultValue:null,description:"",name:"margin",required:!1,type:{name:"boolean"}},position:{defaultValue:null,description:"",name:"position",required:!1,type:{name:"boolean | Direction[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/measure/src/measure/index.tsx#Measure"]={docgenInfo:measure_Measure.__docgenInfo,name:"Measure",path:"src/components/measure/src/measure/index.tsx#Measure"})}catch(__react_docgen_typescript_loader_error){}try{Measure.displayName="Measure",Measure.__docgenInfo={description:"Measure 组件是一个高阶组件，用于测量并获取子元素的内容区域尺寸信息。\n它通过 withContentRect 高阶组件封装，将测量相关的属性和方法注入到子组件中。",displayName:"Measure",props:{innerRef:{defaultValue:null,description:"",name:"innerRef",required:!1,type:{name:"{ current: HTMLElement; } | ((instance: HTMLElement) => void)"}},onResize:{defaultValue:null,description:"",name:"onResize",required:!1,type:{name:"(contentRect: IContentRect) => void"}},throttleMs:{defaultValue:{value:"200"},description:"throttleMs ms 内只触发一次 resize 事件，防止高频触发 resize 事件导致性能问题",name:"throttleMs",required:!1,type:{name:"number"}},client:{defaultValue:null,description:"",name:"client",required:!1,type:{name:"boolean"}},offset:{defaultValue:null,description:"",name:"offset",required:!1,type:{name:"boolean | Direction[]"}},scroll:{defaultValue:null,description:"",name:"scroll",required:!1,type:{name:"boolean"}},bounds:{defaultValue:null,description:"",name:"bounds",required:!1,type:{name:"boolean"}},margin:{defaultValue:null,description:"",name:"margin",required:!1,type:{name:"boolean"}},position:{defaultValue:null,description:"",name:"position",required:!1,type:{name:"boolean | Direction[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/measure/src/index.tsx#Measure"]={docgenInfo:Measure.__docgenInfo,name:"Measure",path:"src/components/measure/src/index.tsx#Measure"})}catch(__react_docgen_typescript_loader_error){}try{withContentRect.displayName="withContentRect",withContentRect.__docgenInfo={description:"封装一个高阶组件，用于获取并更新组件内容区域的尺寸信息。",displayName:"withContentRect",props:{client:{defaultValue:null,description:"",name:"client",required:!1,type:{name:"boolean"}},offset:{defaultValue:null,description:"",name:"offset",required:!1,type:{name:"boolean | Direction[]"}},scroll:{defaultValue:null,description:"",name:"scroll",required:!1,type:{name:"boolean"}},bounds:{defaultValue:null,description:"",name:"bounds",required:!1,type:{name:"boolean"}},margin:{defaultValue:null,description:"",name:"margin",required:!1,type:{name:"boolean"}},position:{defaultValue:null,description:"",name:"position",required:!1,type:{name:"boolean | Direction[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/measure/src/index.tsx#withContentRect"]={docgenInfo:withContentRect.__docgenInfo,name:"withContentRect",path:"src/components/measure/src/index.tsx#withContentRect"})}catch(__react_docgen_typescript_loader_error){}}}]);