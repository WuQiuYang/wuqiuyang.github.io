"use strict";(self.webpackChunk_ohkit_site=self.webpackChunk_ohkit_site||[]).push([[303],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{R:()=>useMDXComponents,x:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}},[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./src/components/measure/Doc.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/next/dist/compiled/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),md_playground=__webpack_require__("./src/components/md-playground/index.tsx");const README_namespaceObject="# `@ohkit/measure`\n\n> React组件尺寸测量工具，用于获取子元素的内容区域尺寸信息\n\n## 安装\n```bash\nnpm install @ohkit/measure\n```\n\n## 功能特性\n- 测量子元素的尺寸信息（宽/高/位置等）\n- 支持响应式尺寸变化监测\n- 提供简洁的API获取测量结果\n- 兼容多种React组件类型\n\n## 基本用法\n\n```tsx\nimport Measure from '@ohkit/measure';\n\nfunction Example() {\n  return (\n    <Measure>\n      {({ measureRef, contentRect }) => (\n        <div ref={measureRef}>\n          <p>测量区域内容</p>\n          {contentRect && (\n            <div>\n              宽度: {contentRect.client.width}px\n            </div>\n          )}\n        </div>\n      )}\n    </Measure>\n  );\n}\n```\n\n## 详见示例\n- [更多Demo](https://wuqiuyang.github.io/ohkit/storybook-static/?path=/story/components-measure-src)\n\n## API 说明\n\n### Props\n\n| 参数 | 说明 | 类型 | 默认值 |\n|------|------|------|--------|\n| children | 渲染函数，接收测量相关参数 | ({ measureRef, measure, contentRect }) => ReactNode | - |\n| innerRef | 获取被测量元素的ref | RefObject \\| (instance: HTMLElement \\| null) => void | - |\n| onResize | 尺寸变化回调函数 | (contentRect: IContentRect) => void | - |\n| throttleMs | resize事件节流时间(ms) | number | 200 |\n| client | 是否测量client尺寸 | boolean | true |\n| offset | 是否测量offset尺寸 | boolean | true |\n| scroll | 是否测量scroll尺寸 | boolean | false |\n| bounds | 是否测量边界位置 | boolean | false |\n| position | 是否测量相对位置与bounds相比少了宽高 | boolean | false |\n| margin | 是否测量margin | boolean | false |\n| triggerResizeInit | 是否在组件挂载时立即触发一次resize事件 | boolean | true |\n\n### 测量参数\n\n`children`函数接收一个对象参数，包含以下属性：\n\n- `measureRef`: 需要绑定到被测量元素的ref\n- `measure`: 手动触发测量的函数\n- `contentRect`: 测量结果对象，包含以下属性：\n  - `entry`: ResizeObserver返回的原始尺寸 {width, height, top, right, bottom, left, x, y}\n  - `client`: {width, height, top, left}\n  - `offset`: {width, height, top, left}\n  - `scroll`: {width, height, top, left}\n  - `bounds`: {top, right, bottom, left, width, height}\n  - `position`: {top, right, bottom, left}\n  - `margin`: {top, right, bottom, left}\n\n## 高级用法\n\n### 自定义测量属性\n\n```tsx\n<Measure client={true} offset={false} onResize={(contentRect) => {\n    console.log(`Client Width: ${contentRect.client.width}px`);\n    console.log(`Offset Width: ${contentRect.client.width}px`);\n}}>\n  {({ measureRef, contentRect }) => (\n    <div ref={measureRef}>\n      <p>测量区域内容</p>\n    </div>\n  )}\n</Measure>\n```\n\n### 监测尺寸变化\n\n```tsx\n<Measure client>\n  {({ measureRef, contentRect }) => {\n    if (contentRect) {\n      console.log('client尺寸变化:', contentRect.client.width);\n    }\n    return <div ref={measureRef}>...</div>;\n  }}\n</Measure>\n```\n\n## 注意事项\n1. 测量元素必须具有确定的尺寸（非display:none）\n2. 频繁测量可能影响性能，建议合理使用\n3. 初次渲染时contentRect可能为undefined";function _createMdxContent(props){return(0,jsx_runtime.jsx)(md_playground.f,{children:README_namespaceObject})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent()}},"./src/components/md-playground/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{f:()=>MDPlayground});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react_markdown__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-markdown/lib/index.js"),remark_gfm__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/remark-gfm/lib/index.js"),react_syntax_highlighter__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react-syntax-highlighter/dist/esm/prism.js");const MDPlayground=props=>{const{children,theme="vscDarkPlus"}=props;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_markdown__WEBPACK_IMPORTED_MODULE_1__.oz,{children,remarkPlugins:[remark_gfm__WEBPACK_IMPORTED_MODULE_2__.A],components:{code({node,inline,className,children,key,ref,...props}){const match=/language-(\w+)/.exec(className||"");return!inline&&match?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{ref:r=>{"function"==typeof ref&&ref(r)},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_syntax_highlighter__WEBPACK_IMPORTED_MODULE_3__.A,{children:String(children).replace(/\n$/,""),style:__webpack_require__("./node_modules/react-syntax-highlighter/dist/esm/styles/prism/index.js")[theme],language:match[1],PreTag:"div",...props})},key):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("code",{className,...props,children})}}})};try{MDPlayground.displayName="MDPlayground",MDPlayground.__docgenInfo={description:"",displayName:"MDPlayground",props:{theme:{defaultValue:{value:"vscDarkPlus"},description:"主题",name:"theme",required:!1,type:{name:"CodeTheme"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/md-playground/index.tsx#MDPlayground"]={docgenInfo:MDPlayground.__docgenInfo,name:"MDPlayground",path:"src/components/md-playground/index.tsx#MDPlayground"})}catch(__react_docgen_typescript_loader_error){}}}]);