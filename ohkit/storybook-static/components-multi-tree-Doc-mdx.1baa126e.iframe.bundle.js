"use strict";(self.webpackChunk_ohkit_site=self.webpackChunk_ohkit_site||[]).push([[831],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{R:()=>useMDXComponents,x:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}},[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./src/components/multi-tree/Doc.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/next/dist/compiled/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),md_playground=__webpack_require__("./src/components/md-playground/index.tsx");const README_namespaceObject='# MultiTree 组件\n\n一个支持多根节点和双向分支的树形结构React组件\n\n## 功能特性\n- 支持多根节点\n- 双向树形结构（左/右分支）\n- 可自定义节点渲染\n- 缩放和平移功能\n- 响应式布局\n- 可自定义样式\n- 支持子节点懒加载\n- 支持虚线连接节点\n\n## 安装\n```bash\nnpm install @ohkit/multi-tree\n```\n\n## 基础用法\n```tsx\nimport { MultiTree } from \'@ohkit/multi-tree\';\n\ninterface TreeNode {\n  id: string | number;\n  label: string;\n  left?: TreeNode[];\n  right?: TreeNode[];\n  openLeft?: boolean;\n  openRight?: boolean;\n  leftNum?: number;\n  rightNum?: number;\n  [key: string]: any;\n}\n\nconst data: TreeNode[] = [{\n  id: 1,\n  label: \'根节点\',\n  left: [{ id: 2, label: \'左子节点\' }],\n  openLeft: false,\n  right: [{ id: 3, label: \'右子节点\' }]\n  openRight: false,\n  leftNum: 1,\n  rightNum: 1\n}];\n\nfunction App() {\n  return (\n    <MultiTree \n      treeList={data}\n      renderCard={(node) => (\n        <div className="custom-node">\n          {node.label}\n        </div>\n      )}\n    />\n  );\n}\n```\n## 详见示例\n- [更多Demo](https://wuqiuyang.github.io/ohkit/storybook-static/?path=/story/components-multi-tree-src)\n\n## Props说明\n\n### 1.核心Props\n| 属性 | 类型 | 默认值 | 说明 |\n|------|------|---------|-------------|\n| treeList | `T[]` | `[]` | 根节点数组(T需继承ITreeData) |\n| renderCard | `(node: T) => React.ReactNode` | - | 自定义节点渲染函数 |\n| fetchChildTree | `(node: T, direction: \'left\'\\|\'right\') => Promise<T[]>` | - | 异步获取子节点的函数 |\n| onToggle | `(node: T, direction: \'left\'\\|\'right\') => void` | - | 节点展开/收起回调 |\n| visiableNode | `T` | - | 初始可见节点 |\n| cacheMaxAge | `number` | Infinity | 缓存持续时间(毫秒) |\n\n### 2.布局Props\n| 属性 | 类型 | 默认值 | 说明 |\n|------|------|---------|-------------|\n| height | `number` | 800 | 画布高度 |\n| width | `number` | 1280 | 画布宽度 |\n| layoutSafeMargin | `number` | 100 | 布局安全边距 |\n| layoutBgColor | `string` | "#f7f8fa" | 画布背景色 |\n| cardWidth | `number` | 200 | 节点默认宽度 |\n| cardWidthSpan | `number` | 86 | 节点水平间距 |\n| cardHeightSpan | `number` | 20 | 节点垂直间距 |\n| treeTopSpan | `number` | 50 | 树分支垂直间距 |\n\n### 3.节点Props\n| 属性 | 类型 | 默认值 | 说明 |\n|------|------|---------|-------------|\n| leftTreePath | `keyof T` | "left" | 左分支路径键名 |\n| rightTreePath | `keyof T` | "right" | 右分支路径键名 |\n| leftNumKey | `keyof T` | "leftNum" | 左子节点数量键名 |\n| rightNumKey | `keyof T` | "rightNum" | 右子节点数量键名 |\n| leftVirtualNumKey | `keyof T` | "leftVirtualNum" | 左虚拟子节点数量键名 |\n| rightVirtualNumKey | `keyof T` | "rightVirtualNum" | 右虚拟子节点数量键名 |\n| openLeftKey | `keyof T` | "openLeft" | 左分支展开状态键名 |\n| openRightKey | `keyof T` | "openRight" | 右分支展开状态键名 |\n| virtualNodeKey | `keyof T` | "isVirtual" | 虚拟节点标记键名 |\n\n### 4.缓存Props\n| 属性 | 类型 | 默认值 | 说明 |\n|------|------|---------|-------------|\n| needCache | `boolean` | true | 是否缓存子节点 |\n| cacheMaxAge | `number` | Infinity | 缓存持续时间(毫秒) |\n\n### 5.样式Props\n| 属性 | 类型 | 默认值 | 说明 |\n|------|------|---------|-------------|\n| className | `string` | - | 自定义类名 |\n| cardWrapClassName | `string` | - | 节点容器自定义类名 |\n| lineColor | `string` | "#4c84ff" | 连接线颜色 |\n| lineSize | `number` | 2 | 连接线宽度 |\n| topBottomLineRadius | `number` | 12 | 边缘节点圆角半径 |\n| toggleBtnSpan | `number` | 16 | 节点与切换按钮间距 |\n\n### 6.其他Props\n| 属性 | 类型 | 默认值 | 说明 |\n|------|------|---------|-------------|\n| visiableNode | `T` | - | 初始可见节点 |\n\n## 工具栏属性\n\n### MultiTreeToolbarProps 定义\n```ts\ninterface MultiTreeToolbarProps<T extends ITreeData = ITreeData> {\n  className?: string;\n  maxZoom?: number;      // 最大缩放倍数，默认1.25\n  minZoom?: number;      // 最小缩放倍数，默认0.25 \n  zoomStep?: number;     // 缩放步长，默认0.25\n  treeRef: MultiTree<T>; // MultiTree组件引用\n  renderToolbar?: (opt: {\n    zoom: number;\n    zoomIn: () => number;\n    zoomOut: () => number;\n    goBackCenter: () => void;\n  }) => React.ReactNode;\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\n}\n```\n\n### 属性说明\n| 属性 | 类型 | 默认值 | 说明 |\n|------|------|---------|-------------|\n| className | `string` | - | 工具栏容器类名 |\n| maxZoom | `number` | 1.25 | 最大缩放倍数 |\n| minZoom | `number` | 0.25 | 最小缩放倍数 |\n| zoomStep | `number` | 0.25 | 每次缩放的变化量 |\n| treeRef | `MultiTree<T>` | - | MultiTree组件实例引用 |\n| renderToolbar | `function` | - | 自定义工具栏渲染函数 |\n| onClick | `function` | - | 工具栏点击事件 |\n\n### 使用示例\n```tsx\n// 自定义工具栏示例\n<MultiTree\n  treeList={data}\n  toolbarProps={{\n    maxZoom: 2,\n    minZoom: 0.5,\n    renderToolbar: ({ zoom, zoomIn, zoomOut, goBackCenter }) => (\n      <div className="custom-toolbar">\n        <button onClick={zoomOut}>缩小</button>\n        <span>{Math.round(zoom * 100)}%</span>\n        <button onClick={zoomIn}>放大</button>\n        <button onClick={goBackCenter}>重置</button>\n      </div>\n    )\n  }}\n/>\n```\n\n## 许可协议\nMIT';function _createMdxContent(props){return(0,jsx_runtime.jsx)(md_playground.f,{children:README_namespaceObject})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent()}},"./src/components/md-playground/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{f:()=>MDPlayground});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react_markdown__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-markdown/lib/index.js"),remark_gfm__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/remark-gfm/lib/index.js"),react_syntax_highlighter__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react-syntax-highlighter/dist/esm/prism.js");const MDPlayground=props=>{const{children,theme="vscDarkPlus"}=props;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_markdown__WEBPACK_IMPORTED_MODULE_1__.oz,{children,remarkPlugins:[remark_gfm__WEBPACK_IMPORTED_MODULE_2__.A],components:{code({node,inline,className,children,key,ref,...props}){const match=/language-(\w+)/.exec(className||"");return!inline&&match?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{ref:r=>{"function"==typeof ref&&ref(r)},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_syntax_highlighter__WEBPACK_IMPORTED_MODULE_3__.A,{children:String(children).replace(/\n$/,""),style:__webpack_require__("./node_modules/react-syntax-highlighter/dist/esm/styles/prism/index.js")[theme],language:match[1],PreTag:"div",...props})},key):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("code",{className,...props,children})}}})};try{MDPlayground.displayName="MDPlayground",MDPlayground.__docgenInfo={description:"",displayName:"MDPlayground",props:{theme:{defaultValue:{value:"vscDarkPlus"},description:"主题",name:"theme",required:!1,type:{name:"CodeTheme"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/md-playground/index.tsx#MDPlayground"]={docgenInfo:MDPlayground.__docgenInfo,name:"MDPlayground",path:"src/components/md-playground/index.tsx#MDPlayground"})}catch(__react_docgen_typescript_loader_error){}}}]);